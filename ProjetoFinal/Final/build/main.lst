ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB227:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** //Variaveis Timer
  49:Core/Src/main.c **** uint8_t LedsTimer[5] = {LedTimer1_Pin, LedTimer2_Pin, LedTimer3_Pin, LedTimer4_Pin, LedTimer5_Pin,}
  50:Core/Src/main.c **** uint8_t LedTimerAceso = 0;
  51:Core/Src/main.c **** uint8_t EstadoBotaoTimer = GPIO_PIN_SET;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** //Tempo setado
  54:Core/Src/main.c **** uint8_t Tempo[5] = {10, 20, 30, 40, 50};
  55:Core/Src/main.c **** uint8_t TempoSetado;
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** //Indicador Liga Desliga
  58:Core/Src/main.c **** uint8_t EstadoSistema = 1;
  59:Core/Src/main.c **** uint8_t EstadoBotaoOnOff = GPIO_PIN_SET;
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** float Umidade;
  62:Core/Src/main.c **** float UmidadeAnterior = 0;//Umidade no Inicio do Ciclo
  63:Core/Src/main.c **** uint8_t VolumeDeAgua;
  64:Core/Src/main.c **** uint8_t VariacaoUmidade;
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** uint8_t ModoAtual = 1;
  67:Core/Src/main.c **** uint8_t EstadoAnteriorBotaoModo = GPIO_PIN_SET; 
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** // Variáveis para os modelos matemáticos
  70:Core/Src/main.c **** float Vazao = 2.5; //Vazao em L/s
  71:Core/Src/main.c **** float AreaIrrigada = 10.0; //Area Irrigada
  72:Core/Src/main.c **** float UmidadeDesejada = 50.0; //Umidade alvo
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** float k; //Constante de Ajuste
  75:Core/Src/main.c **** float TempoNecessario = 0; //Tempo de Irrigacao
  76:Core/Src/main.c **** float Capacidade = 200; //Capacidade Hidrica do solo
  77:Core/Src/main.c **** float AguaDesnecessaria;//Gasto de agua
  78:Core/Src/main.c **** /* USER CODE END PV */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  81:Core/Src/main.c **** void SystemClock_Config(void);
  82:Core/Src/main.c **** static void MX_GPIO_Init(void);
  83:Core/Src/main.c **** static void MX_ADC1_Init(void);
  84:Core/Src/main.c **** static void MX_TIM2_Init(void);
  85:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  86:Core/Src/main.c **** void ExecutarModo(void);
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** //Função para ler o valor do ADC
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 3


  89:Core/Src/main.c **** uint32_t Read_ADC_Value(void)
  90:Core/Src/main.c **** {
  91:Core/Src/main.c ****   HAL_ADC_Start(&hadc1); // Inicia a conversão
  92:Core/Src/main.c ****   HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY); // Aguarda a conversão
  93:Core/Src/main.c ****   return HAL_ADC_GetValue(&hadc1); // Retorna o valor lido
  94:Core/Src/main.c **** }
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /* USER CODE END PFP */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  99:Core/Src/main.c **** /* USER CODE BEGIN 0 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c **** /* USER CODE END 0 */
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /**
 104:Core/Src/main.c ****   * @brief  The application entry point.
 105:Core/Src/main.c ****   * @retval int
 106:Core/Src/main.c ****   */
 107:Core/Src/main.c **** int main(void)
 108:Core/Src/main.c **** {
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 111:Core/Src/main.c ****   /* USER CODE END 1 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 116:Core/Src/main.c ****   HAL_Init();
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE END Init */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Configure the system clock */
 123:Core/Src/main.c ****   SystemClock_Config();
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE END SysInit */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /* Initialize all configured peripherals */
 130:Core/Src/main.c ****   MX_GPIO_Init();
 131:Core/Src/main.c ****   MX_ADC1_Init();
 132:Core/Src/main.c ****   MX_TIM2_Init();
 133:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, LedsTimer[LedTimerAceso], GPIO_PIN_SET);
 136:Core/Src/main.c ****   TempoSetado = Tempo[LedTimerAceso];
 137:Core/Src/main.c **** 
 138:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_SET);
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****   HAL_GPIO_WritePin(Modo1_GPIO_Port, Modo1_Pin, GPIO_PIN_SET);
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   HAL_ADC_Start(&hadc1);  // Inicia a conversão contínua do ADC
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 4


 146:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim2);
 147:Core/Src/main.c ****   /* USER CODE END 2 */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /* Infinite loop */
 150:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 151:Core/Src/main.c ****   while (1)
 152:Core/Src/main.c ****   {
 153:Core/Src/main.c ****  //Leitura do Potenciometro Umidade ---------------------------------------------------------------
 154:Core/Src/main.c ****      // Lê o valor do ADC
 155:Core/Src/main.c ****      uint32_t adc_value = Read_ADC_Value();
 156:Core/Src/main.c ****  
 157:Core/Src/main.c ****      // Converte o valor do ADC para Umidade (0% a 100%)
 158:Core/Src/main.c ****      Umidade = (float)((adc_value * 100) / 4095);
 159:Core/Src/main.c ****  //------------------------------------------------------------------------------------------------
 160:Core/Src/main.c ****      //modelos matemáticos
 161:Core/Src/main.c ****      VolumeDeAgua = Vazao * TempoSetado; //Volume gasto por ciclo
 162:Core/Src/main.c ****  
 163:Core/Src/main.c ****      VariacaoUmidade = (Umidade - UmidadeAnterior); //Variação de umidade
 164:Core/Src/main.c ****      
 165:Core/Src/main.c ****      k = TempoSetado / (VariacaoUmidade * 0.01);//aumentou tantos % a cada tantos minutos
 166:Core/Src/main.c ****  
 167:Core/Src/main.c ****      TempoNecessario = k * (UmidadeDesejada - Umidade);;//Tempo ate chegar a umidade desejada 
 168:Core/Src/main.c ****  
 169:Core/Src/main.c ****      AguaDesnecessaria = VolumeDeAgua - (((UmidadeDesejada - Umidade)/100)*Capacidade*AreaIrrigada)
 170:Core/Src/main.c ****  
 171:Core/Src/main.c ****  
 172:Core/Src/main.c ****  //Configuracao do Timer---------------------------------------------------------------------------
 173:Core/Src/main.c ****     // Lê o estado atual do botão
 174:Core/Src/main.c ****     uint8_t EstadoAnteriorBotaoTimer = HAL_GPIO_ReadPin(BotaoTimer_GPIO_Port, BotaoTimer_Pin);
 175:Core/Src/main.c ****   
 176:Core/Src/main.c ****     if (EstadoBotaoTimer == GPIO_PIN_SET && EstadoAnteriorBotaoTimer == GPIO_PIN_RESET && EstadoSis
 177:Core/Src/main.c ****     {
 178:Core/Src/main.c ****      HAL_Delay(100);
 179:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, LedsTimer[LedTimerAceso], GPIO_PIN_RESET);
 180:Core/Src/main.c ****   
 181:Core/Src/main.c ****       LedTimerAceso = (LedTimerAceso + 1) % 5;
 182:Core/Src/main.c ****   
 183:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, LedsTimer[LedTimerAceso], GPIO_PIN_SET);
 184:Core/Src/main.c ****       HAL_Delay(50);
 185:Core/Src/main.c ****     }
 186:Core/Src/main.c ****   
 187:Core/Src/main.c ****     EstadoBotaoTimer = EstadoAnteriorBotaoTimer;
 188:Core/Src/main.c ****     TempoSetado = Tempo[LedTimerAceso];
 189:Core/Src/main.c ****  //------------------------------------------------------------------------------------------------
 190:Core/Src/main.c ****  //Configuracao Liga-Desliga-----------------------------------------------------------------------
 191:Core/Src/main.c ****      // Configuração Liga-Desliga
 192:Core/Src/main.c ****      uint8_t EstadoAnteriorBotaoOnOff = HAL_GPIO_ReadPin(BotaoOnOff_GPIO_Port, BotaoOnOff_Pin);
 193:Core/Src/main.c ****      if (EstadoBotaoOnOff == GPIO_PIN_SET && EstadoAnteriorBotaoOnOff == GPIO_PIN_RESET) {
 194:Core/Src/main.c ****          HAL_Delay(100);
 195:Core/Src/main.c ****          EstadoSistema = !EstadoSistema;
 196:Core/Src/main.c ****      }
 197:Core/Src/main.c ****      EstadoBotaoOnOff = EstadoAnteriorBotaoOnOff;
 198:Core/Src/main.c ****  
 199:Core/Src/main.c ****      HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, EstadoSistema == 0 ? GPIO_PIN_RESET : GPIO_P
 200:Core/Src/main.c ****  
 201:Core/Src/main.c ****      if (EstadoSistema == 0) {
 202:Core/Src/main.c ****          UmidadeAnterior = Umidade;
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 5


 203:Core/Src/main.c ****          ExecutarModo();
 204:Core/Src/main.c ****      }else{
 205:Core/Src/main.c ****        HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, GPIO_PIN_RESET);
 206:Core/Src/main.c ****      }
 207:Core/Src/main.c ****  //------------------------------------------------------------------------------------------------
 208:Core/Src/main.c ****  //Configuracao Configuração Modos---------------------------------------------------------------
 209:Core/Src/main.c ****  // Leitura do estado atual do botão Modo
 210:Core/Src/main.c ****  uint8_t EstadoAtualBotaoModo = HAL_GPIO_ReadPin(BotaoModo_GPIO_Port, BotaoModo_Pin);
 211:Core/Src/main.c ****  
 212:Core/Src/main.c ****    if (EstadoAnteriorBotaoModo == GPIO_PIN_SET && EstadoAtualBotaoModo == GPIO_PIN_RESET && EstadoS
 213:Core/Src/main.c ****        HAL_Delay(100);
 214:Core/Src/main.c ****        ModoAtual = (ModoAtual % 3) + 1;
 215:Core/Src/main.c ****  
 216:Core/Src/main.c ****        HAL_GPIO_WritePin(Modo1_GPIO_Port, Modo1_Pin, (ModoAtual == 1) ? GPIO_PIN_SET : GPIO_PIN_RES
 217:Core/Src/main.c ****        HAL_GPIO_WritePin(Modo2_GPIO_Port, Modo2_Pin, (ModoAtual == 2) ? GPIO_PIN_SET : GPIO_PIN_RES
 218:Core/Src/main.c ****        HAL_GPIO_WritePin(Modo3_GPIO_Port, Modo3_Pin, (ModoAtual == 3) ? GPIO_PIN_SET : GPIO_PIN_RES
 219:Core/Src/main.c ****  }
 220:Core/Src/main.c ****    EstadoAnteriorBotaoModo = EstadoAtualBotaoModo;
 221:Core/Src/main.c ****  
 222:Core/Src/main.c ****  //------------------------------------------------------------------------------------------------
 223:Core/Src/main.c ****  }
 224:Core/Src/main.c ****  }
 225:Core/Src/main.c ****  /* USER CODE END 3 */
 226:Core/Src/main.c ****  
 227:Core/Src/main.c ****   void ExecutarModo(void) {
 228:Core/Src/main.c ****    static uint8_t Modo1Executado = 0;
 229:Core/Src/main.c ****  
 230:Core/Src/main.c ****    static uint32_t TempoAnteriorModo2 = 0;
 231:Core/Src/main.c ****    static uint8_t LedOnOffStateModo2 = 0;
 232:Core/Src/main.c ****  
 233:Core/Src/main.c ****    switch (ModoAtual) {
 234:Core/Src/main.c ****        case 1: //Modo 1, Manual
 235:Core/Src/main.c ****            if (!Modo1Executado) {
 236:Core/Src/main.c ****                //Liga
 237:Core/Src/main.c ****                HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, GPIO_PIN_SET);
 238:Core/Src/main.c ****  
 239:Core/Src/main.c ****                HAL_Delay(TempoSetado * 1000);
 240:Core/Src/main.c ****                //Desliga
 241:Core/Src/main.c ****                HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, GPIO_PIN_RESET);
 242:Core/Src/main.c ****  
 243:Core/Src/main.c ****                EstadoSistema = 1; //Sistema desligado
 244:Core/Src/main.c ****                Modo1Executado = 1;
 245:Core/Src/main.c ****  }
 246:Core/Src/main.c ****            break;
 247:Core/Src/main.c ****  
 248:Core/Src/main.c ****        case 2: {//Modo 2, Automatizado
 249:Core/Src/main.c ****              uint32_t TempoAtual = HAL_GetTick();
 250:Core/Src/main.c ****              //Verifica se o tempo definido no timer ja passou
 251:Core/Src/main.c ****              if (TempoAtual - TempoAnteriorModo2 >= (TempoSetado * 1000)) {
 252:Core/Src/main.c ****                  TempoAnteriorModo2 = TempoAtual;
 253:Core/Src/main.c ****  
 254:Core/Src/main.c ****                  LedOnOffStateModo2 = !LedOnOffStateModo2;
 255:Core/Src/main.c ****                  HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, LedOnOffStateModo2 ? GPIO_PIN_SET : GPIO_PI
 256:Core/Src/main.c ****              }
 257:Core/Src/main.c ****  }
 258:Core/Src/main.c ****            break;
 259:Core/Src/main.c ****  
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 6


 260:Core/Src/main.c ****        case 3: { //Modo 3, Controlador de Umidade
 261:Core/Src/main.c ****             float umidadeMinima = 35; 
 262:Core/Src/main.c ****             float umidadeDesejada = 50;
 263:Core/Src/main.c ****  
 264:Core/Src/main.c ****              //Verifica a umidade atual
 265:Core/Src/main.c ****             if (Umidade < umidadeMinima) {
 266:Core/Src/main.c ****                 HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, GPIO_PIN_SET);
 267:Core/Src/main.c ****             } else if (Umidade >= umidadeDesejada) {
 268:Core/Src/main.c ****                  HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, GPIO_PIN_RESET);
 269:Core/Src/main.c ****      }
 270:Core/Src/main.c ****  
 271:Core/Src/main.c ****      HAL_Delay(10);
 272:Core/Src/main.c ****  }
 273:Core/Src/main.c ****            break;
 274:Core/Src/main.c ****  
 275:Core/Src/main.c ****        default:
 276:Core/Src/main.c ****            break;
 277:Core/Src/main.c ****    }
 278:Core/Src/main.c ****  
 279:Core/Src/main.c ****    if (EstadoSistema == 1) {
 280:Core/Src/main.c ****        Modo1Executado = 0;
 281:Core/Src/main.c ****        LedOnOffStateModo2 = 0;
 282:Core/Src/main.c ****    }
 283:Core/Src/main.c ****  }
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****  void TIM2_IRQHandler(void)
 286:Core/Src/main.c ****  {
 287:Core/Src/main.c ****      // Verifica se a interrupção foi gerada pelo timer
 288:Core/Src/main.c ****      if (__HAL_TIM_GET_FLAG(&htim2, TIM_FLAG_UPDATE) != RESET)
 289:Core/Src/main.c ****      {
 290:Core/Src/main.c ****          __HAL_TIM_CLEAR_FLAG(&htim2, TIM_FLAG_UPDATE);
 291:Core/Src/main.c ****  
 292:Core/Src/main.c ****          if (Umidade > 65.0 || Umidade < 25.0)
 293:Core/Src/main.c ****          {
 294:Core/Src/main.c ****           HAL_GPIO_WritePin(GPIOB, Buzzer_Pin, GPIO_PIN_SET);  //Liga o buzzer
 295:Core/Src/main.c ****           EstadoSistema = 1;
 296:Core/Src/main.c ****          }
 297:Core/Src/main.c ****          else
 298:Core/Src/main.c ****          {
 299:Core/Src/main.c ****              HAL_GPIO_WritePin(GPIOB, Buzzer_Pin, GPIO_PIN_RESET); //Desliga o buzzer (nível baixo
 300:Core/Src/main.c ****          }
 301:Core/Src/main.c ****      }
 302:Core/Src/main.c ****  }
 303:Core/Src/main.c **** /**
 304:Core/Src/main.c ****   * @brief System Clock Configuration
 305:Core/Src/main.c ****   * @retval None
 306:Core/Src/main.c ****   */
 307:Core/Src/main.c **** void SystemClock_Config(void)
 308:Core/Src/main.c **** {
 309:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 310:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 313:Core/Src/main.c ****   */
 314:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 315:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 316:Core/Src/main.c **** 
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 7


 317:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 318:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 319:Core/Src/main.c ****   */
 320:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 321:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 324:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 325:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 326:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 327:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 328:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 329:Core/Src/main.c ****   {
 330:Core/Src/main.c ****     Error_Handler();
 331:Core/Src/main.c ****   }
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 334:Core/Src/main.c ****   */
 335:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 336:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 337:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 338:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 339:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 340:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 341:Core/Src/main.c **** 
 342:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 343:Core/Src/main.c ****   {
 344:Core/Src/main.c ****     Error_Handler();
 345:Core/Src/main.c ****   }
 346:Core/Src/main.c **** }
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** /**
 349:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 350:Core/Src/main.c ****   * @param None
 351:Core/Src/main.c ****   * @retval None
 352:Core/Src/main.c ****   */
 353:Core/Src/main.c **** static void MX_ADC1_Init(void)
 354:Core/Src/main.c **** {
 355:Core/Src/main.c **** 
 356:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 357:Core/Src/main.c **** 
 358:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 359:Core/Src/main.c **** 
 360:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 361:Core/Src/main.c **** 
 362:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 363:Core/Src/main.c **** 
 364:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 365:Core/Src/main.c **** 
 366:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 367:Core/Src/main.c ****   */
 368:Core/Src/main.c ****   hadc1.Instance = ADC1;
 369:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 370:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 371:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 372:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 373:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 8


 374:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 375:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 376:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 377:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 378:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 379:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 380:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 381:Core/Src/main.c ****   {
 382:Core/Src/main.c ****     Error_Handler();
 383:Core/Src/main.c ****   }
 384:Core/Src/main.c **** 
 385:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 386:Core/Src/main.c ****   */
 387:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_8;
 388:Core/Src/main.c ****   sConfig.Rank = 1;
 389:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 390:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 391:Core/Src/main.c ****   {
 392:Core/Src/main.c ****     Error_Handler();
 393:Core/Src/main.c ****   }
 394:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 397:Core/Src/main.c **** 
 398:Core/Src/main.c **** }
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** /**
 401:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 402:Core/Src/main.c ****   * @param None
 403:Core/Src/main.c ****   * @retval None
 404:Core/Src/main.c ****   */
 405:Core/Src/main.c **** static void MX_TIM2_Init(void)
 406:Core/Src/main.c **** {
 407:Core/Src/main.c **** 
 408:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 409:Core/Src/main.c **** 
 410:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 411:Core/Src/main.c **** 
 412:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 413:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 414:Core/Src/main.c **** 
 415:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 416:Core/Src/main.c **** 
 417:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 418:Core/Src/main.c ****   htim2.Instance = TIM2;
 419:Core/Src/main.c ****   htim2.Init.Prescaler = 83;
 420:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 421:Core/Src/main.c ****   htim2.Init.Period = 999999;
 422:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 423:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 424:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 425:Core/Src/main.c ****   {
 426:Core/Src/main.c ****     Error_Handler();
 427:Core/Src/main.c ****   }
 428:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 429:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 430:Core/Src/main.c ****   {
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 9


 431:Core/Src/main.c ****     Error_Handler();
 432:Core/Src/main.c ****   }
 433:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 434:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 435:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 436:Core/Src/main.c ****   {
 437:Core/Src/main.c ****     Error_Handler();
 438:Core/Src/main.c ****   }
 439:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 440:Core/Src/main.c **** 
 441:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 442:Core/Src/main.c **** 
 443:Core/Src/main.c **** }
 444:Core/Src/main.c **** 
 445:Core/Src/main.c **** /**
 446:Core/Src/main.c ****   * @brief GPIO Initialization Function
 447:Core/Src/main.c ****   * @param None
 448:Core/Src/main.c ****   * @retval None
 449:Core/Src/main.c ****   */
 450:Core/Src/main.c **** static void MX_GPIO_Init(void)
 451:Core/Src/main.c **** {
  28              		.loc 1 451 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 24
  35              		.cfi_offset 4, -24
  36              		.cfi_offset 5, -20
  37              		.cfi_offset 6, -16
  38              		.cfi_offset 7, -12
  39              		.cfi_offset 8, -8
  40              		.cfi_offset 14, -4
  41 0004 8AB0     		sub	sp, sp, #40
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 64
 452:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  44              		.loc 1 452 3 view .LVU1
  45              		.loc 1 452 20 is_stmt 0 view .LVU2
  46 0006 0024     		movs	r4, #0
  47 0008 0594     		str	r4, [sp, #20]
  48 000a 0694     		str	r4, [sp, #24]
  49 000c 0794     		str	r4, [sp, #28]
  50 000e 0894     		str	r4, [sp, #32]
  51 0010 0994     		str	r4, [sp, #36]
 453:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 454:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 455:Core/Src/main.c **** 
 456:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 457:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  52              		.loc 1 457 3 is_stmt 1 view .LVU3
  53              	.LBB4:
  54              		.loc 1 457 3 view .LVU4
  55 0012 0194     		str	r4, [sp, #4]
  56              		.loc 1 457 3 view .LVU5
  57 0014 344B     		ldr	r3, .L3
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 10


  58 0016 1A6B     		ldr	r2, [r3, #48]
  59 0018 42F00402 		orr	r2, r2, #4
  60 001c 1A63     		str	r2, [r3, #48]
  61              		.loc 1 457 3 view .LVU6
  62 001e 1A6B     		ldr	r2, [r3, #48]
  63 0020 02F00402 		and	r2, r2, #4
  64 0024 0192     		str	r2, [sp, #4]
  65              		.loc 1 457 3 view .LVU7
  66 0026 019A     		ldr	r2, [sp, #4]
  67              	.LBE4:
  68              		.loc 1 457 3 view .LVU8
 458:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  69              		.loc 1 458 3 view .LVU9
  70              	.LBB5:
  71              		.loc 1 458 3 view .LVU10
  72 0028 0294     		str	r4, [sp, #8]
  73              		.loc 1 458 3 view .LVU11
  74 002a 1A6B     		ldr	r2, [r3, #48]
  75 002c 42F08002 		orr	r2, r2, #128
  76 0030 1A63     		str	r2, [r3, #48]
  77              		.loc 1 458 3 view .LVU12
  78 0032 1A6B     		ldr	r2, [r3, #48]
  79 0034 02F08002 		and	r2, r2, #128
  80 0038 0292     		str	r2, [sp, #8]
  81              		.loc 1 458 3 view .LVU13
  82 003a 029A     		ldr	r2, [sp, #8]
  83              	.LBE5:
  84              		.loc 1 458 3 view .LVU14
 459:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  85              		.loc 1 459 3 view .LVU15
  86              	.LBB6:
  87              		.loc 1 459 3 view .LVU16
  88 003c 0394     		str	r4, [sp, #12]
  89              		.loc 1 459 3 view .LVU17
  90 003e 1A6B     		ldr	r2, [r3, #48]
  91 0040 42F00102 		orr	r2, r2, #1
  92 0044 1A63     		str	r2, [r3, #48]
  93              		.loc 1 459 3 view .LVU18
  94 0046 1A6B     		ldr	r2, [r3, #48]
  95 0048 02F00102 		and	r2, r2, #1
  96 004c 0392     		str	r2, [sp, #12]
  97              		.loc 1 459 3 view .LVU19
  98 004e 039A     		ldr	r2, [sp, #12]
  99              	.LBE6:
 100              		.loc 1 459 3 view .LVU20
 460:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 101              		.loc 1 460 3 view .LVU21
 102              	.LBB7:
 103              		.loc 1 460 3 view .LVU22
 104 0050 0494     		str	r4, [sp, #16]
 105              		.loc 1 460 3 view .LVU23
 106 0052 1A6B     		ldr	r2, [r3, #48]
 107 0054 42F00202 		orr	r2, r2, #2
 108 0058 1A63     		str	r2, [r3, #48]
 109              		.loc 1 460 3 view .LVU24
 110 005a 1B6B     		ldr	r3, [r3, #48]
 111 005c 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 11


 112 0060 0493     		str	r3, [sp, #16]
 113              		.loc 1 460 3 view .LVU25
 114 0062 049B     		ldr	r3, [sp, #16]
 115              	.LBE7:
 116              		.loc 1 460 3 view .LVU26
 461:Core/Src/main.c **** 
 462:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 463:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 117              		.loc 1 463 3 view .LVU27
 118 0064 DFF88C80 		ldr	r8, .L3+12
 119 0068 2246     		mov	r2, r4
 120 006a 4FF40051 		mov	r1, #8192
 121 006e 4046     		mov	r0, r8
 122 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 123              	.LVL0:
 464:Core/Src/main.c **** 
 465:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 466:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, LedTimer1_Pin|LedTimer2_Pin|LedTimer3_Pin|LedTimer4_Pin
 124              		.loc 1 466 3 view .LVU28
 125 0074 1D4D     		ldr	r5, .L3+4
 126 0076 2246     		mov	r2, r4
 127 0078 40F2FF11 		movw	r1, #511
 128 007c 2846     		mov	r0, r5
 129 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 130              	.LVL1:
 467:Core/Src/main.c ****                           |LedTimer5_Pin|LedOnOff_Pin|Modo1_Pin|Modo2_Pin
 468:Core/Src/main.c ****                           |Modo3_Pin, GPIO_PIN_RESET);
 469:Core/Src/main.c **** 
 470:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 471:Core/Src/main.c ****   HAL_GPIO_WritePin(Buzzer_GPIO_Port, Buzzer_Pin, GPIO_PIN_RESET);
 131              		.loc 1 471 3 view .LVU29
 132 0082 1B4F     		ldr	r7, .L3+8
 133 0084 2246     		mov	r2, r4
 134 0086 4FF40041 		mov	r1, #32768
 135 008a 3846     		mov	r0, r7
 136 008c FFF7FEFF 		bl	HAL_GPIO_WritePin
 137              	.LVL2:
 472:Core/Src/main.c **** 
 473:Core/Src/main.c ****   /*Configure GPIO pin : KIT_LED_Pin */
 474:Core/Src/main.c ****   GPIO_InitStruct.Pin = KIT_LED_Pin;
 138              		.loc 1 474 3 view .LVU30
 139              		.loc 1 474 23 is_stmt 0 view .LVU31
 140 0090 4FF40053 		mov	r3, #8192
 141 0094 0593     		str	r3, [sp, #20]
 475:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 142              		.loc 1 475 3 is_stmt 1 view .LVU32
 143              		.loc 1 475 24 is_stmt 0 view .LVU33
 144 0096 0126     		movs	r6, #1
 145 0098 0696     		str	r6, [sp, #24]
 476:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 146              		.loc 1 476 3 is_stmt 1 view .LVU34
 147              		.loc 1 476 24 is_stmt 0 view .LVU35
 148 009a 0794     		str	r4, [sp, #28]
 477:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 149              		.loc 1 477 3 is_stmt 1 view .LVU36
 150              		.loc 1 477 25 is_stmt 0 view .LVU37
 151 009c 0894     		str	r4, [sp, #32]
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 12


 478:Core/Src/main.c ****   HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 152              		.loc 1 478 3 is_stmt 1 view .LVU38
 153 009e 05A9     		add	r1, sp, #20
 154 00a0 4046     		mov	r0, r8
 155 00a2 FFF7FEFF 		bl	HAL_GPIO_Init
 156              	.LVL3:
 479:Core/Src/main.c **** 
 480:Core/Src/main.c ****   /*Configure GPIO pins : LedTimer1_Pin LedTimer2_Pin LedTimer3_Pin LedTimer4_Pin
 481:Core/Src/main.c ****                            LedTimer5_Pin LedOnOff_Pin Modo1_Pin Modo2_Pin
 482:Core/Src/main.c ****                            Modo3_Pin */
 483:Core/Src/main.c ****   GPIO_InitStruct.Pin = LedTimer1_Pin|LedTimer2_Pin|LedTimer3_Pin|LedTimer4_Pin
 157              		.loc 1 483 3 view .LVU39
 158              		.loc 1 483 23 is_stmt 0 view .LVU40
 159 00a6 40F2FF13 		movw	r3, #511
 160 00aa 0593     		str	r3, [sp, #20]
 484:Core/Src/main.c ****                           |LedTimer5_Pin|LedOnOff_Pin|Modo1_Pin|Modo2_Pin
 485:Core/Src/main.c ****                           |Modo3_Pin;
 486:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 161              		.loc 1 486 3 is_stmt 1 view .LVU41
 162              		.loc 1 486 24 is_stmt 0 view .LVU42
 163 00ac 0696     		str	r6, [sp, #24]
 487:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 164              		.loc 1 487 3 is_stmt 1 view .LVU43
 165              		.loc 1 487 24 is_stmt 0 view .LVU44
 166 00ae 0794     		str	r4, [sp, #28]
 488:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 167              		.loc 1 488 3 is_stmt 1 view .LVU45
 168              		.loc 1 488 25 is_stmt 0 view .LVU46
 169 00b0 0894     		str	r4, [sp, #32]
 489:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 170              		.loc 1 489 3 is_stmt 1 view .LVU47
 171 00b2 05A9     		add	r1, sp, #20
 172 00b4 2846     		mov	r0, r5
 173 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 174              	.LVL4:
 490:Core/Src/main.c **** 
 491:Core/Src/main.c ****   /*Configure GPIO pin : Buzzer_Pin */
 492:Core/Src/main.c ****   GPIO_InitStruct.Pin = Buzzer_Pin;
 175              		.loc 1 492 3 view .LVU48
 176              		.loc 1 492 23 is_stmt 0 view .LVU49
 177 00ba 4FF40043 		mov	r3, #32768
 178 00be 0593     		str	r3, [sp, #20]
 493:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 179              		.loc 1 493 3 is_stmt 1 view .LVU50
 180              		.loc 1 493 24 is_stmt 0 view .LVU51
 181 00c0 0696     		str	r6, [sp, #24]
 494:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 182              		.loc 1 494 3 is_stmt 1 view .LVU52
 183              		.loc 1 494 24 is_stmt 0 view .LVU53
 184 00c2 0794     		str	r4, [sp, #28]
 495:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 185              		.loc 1 495 3 is_stmt 1 view .LVU54
 186              		.loc 1 495 25 is_stmt 0 view .LVU55
 187 00c4 0894     		str	r4, [sp, #32]
 496:Core/Src/main.c ****   HAL_GPIO_Init(Buzzer_GPIO_Port, &GPIO_InitStruct);
 188              		.loc 1 496 3 is_stmt 1 view .LVU56
 189 00c6 05A9     		add	r1, sp, #20
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 13


 190 00c8 3846     		mov	r0, r7
 191 00ca FFF7FEFF 		bl	HAL_GPIO_Init
 192              	.LVL5:
 497:Core/Src/main.c **** 
 498:Core/Src/main.c ****   /*Configure GPIO pins : BotaoModo_Pin BotaoTimer_Pin BotaoOnOff_Pin */
 499:Core/Src/main.c ****   GPIO_InitStruct.Pin = BotaoModo_Pin|BotaoTimer_Pin|BotaoOnOff_Pin;
 193              		.loc 1 499 3 view .LVU57
 194              		.loc 1 499 23 is_stmt 0 view .LVU58
 195 00ce 4FF46063 		mov	r3, #3584
 196 00d2 0593     		str	r3, [sp, #20]
 500:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 197              		.loc 1 500 3 is_stmt 1 view .LVU59
 198              		.loc 1 500 24 is_stmt 0 view .LVU60
 199 00d4 0694     		str	r4, [sp, #24]
 501:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 200              		.loc 1 501 3 is_stmt 1 view .LVU61
 201              		.loc 1 501 24 is_stmt 0 view .LVU62
 202 00d6 0794     		str	r4, [sp, #28]
 502:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 203              		.loc 1 502 3 is_stmt 1 view .LVU63
 204 00d8 05A9     		add	r1, sp, #20
 205 00da 2846     		mov	r0, r5
 206 00dc FFF7FEFF 		bl	HAL_GPIO_Init
 207              	.LVL6:
 503:Core/Src/main.c **** 
 504:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 505:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 506:Core/Src/main.c **** }
 208              		.loc 1 506 1 is_stmt 0 view .LVU64
 209 00e0 0AB0     		add	sp, sp, #40
 210              	.LCFI2:
 211              		.cfi_def_cfa_offset 24
 212              		@ sp needed
 213 00e2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 214              	.L4:
 215 00e6 00BF     		.align	2
 216              	.L3:
 217 00e8 00380240 		.word	1073887232
 218 00ec 00000240 		.word	1073872896
 219 00f0 00040240 		.word	1073873920
 220 00f4 00080240 		.word	1073874944
 221              		.cfi_endproc
 222              	.LFE227:
 224              		.section	.text.Read_ADC_Value,"ax",%progbits
 225              		.align	1
 226              		.global	Read_ADC_Value
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	Read_ADC_Value:
 232              	.LFB220:
  90:Core/Src/main.c ****   HAL_ADC_Start(&hadc1); // Inicia a conversão
 233              		.loc 1 90 1 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 237 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 14


 238              	.LCFI3:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 4, -8
 241              		.cfi_offset 14, -4
  91:Core/Src/main.c ****   HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY); // Aguarda a conversão
 242              		.loc 1 91 3 view .LVU66
 243 0002 064C     		ldr	r4, .L7
 244 0004 2046     		mov	r0, r4
 245 0006 FFF7FEFF 		bl	HAL_ADC_Start
 246              	.LVL7:
  92:Core/Src/main.c ****   return HAL_ADC_GetValue(&hadc1); // Retorna o valor lido
 247              		.loc 1 92 3 view .LVU67
 248 000a 4FF0FF31 		mov	r1, #-1
 249 000e 2046     		mov	r0, r4
 250 0010 FFF7FEFF 		bl	HAL_ADC_PollForConversion
 251              	.LVL8:
  93:Core/Src/main.c **** }
 252              		.loc 1 93 3 view .LVU68
  93:Core/Src/main.c **** }
 253              		.loc 1 93 10 is_stmt 0 view .LVU69
 254 0014 2046     		mov	r0, r4
 255 0016 FFF7FEFF 		bl	HAL_ADC_GetValue
 256              	.LVL9:
  94:Core/Src/main.c **** 
 257              		.loc 1 94 1 view .LVU70
 258 001a 10BD     		pop	{r4, pc}
 259              	.L8:
 260              		.align	2
 261              	.L7:
 262 001c 00000000 		.word	.LANCHOR0
 263              		.cfi_endproc
 264              	.LFE220:
 266              		.section	.text.ExecutarModo,"ax",%progbits
 267              		.align	1
 268              		.global	ExecutarModo
 269              		.syntax unified
 270              		.thumb
 271              		.thumb_func
 273              	ExecutarModo:
 274              	.LFB222:
 227:Core/Src/main.c ****    static uint8_t Modo1Executado = 0;
 275              		.loc 1 227 27 is_stmt 1 view -0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 0
 278              		@ frame_needed = 0, uses_anonymous_args = 0
 279 0000 10B5     		push	{r4, lr}
 280              	.LCFI4:
 281              		.cfi_def_cfa_offset 8
 282              		.cfi_offset 4, -8
 283              		.cfi_offset 14, -4
 228:Core/Src/main.c ****  
 284              		.loc 1 228 4 view .LVU72
 230:Core/Src/main.c ****    static uint8_t LedOnOffStateModo2 = 0;
 285              		.loc 1 230 4 view .LVU73
 231:Core/Src/main.c ****  
 286              		.loc 1 231 4 view .LVU74
 233:Core/Src/main.c ****        case 1: //Modo 1, Manual
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 15


 287              		.loc 1 233 4 view .LVU75
 288 0002 354B     		ldr	r3, .L26
 289 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 290 0006 022B     		cmp	r3, #2
 291 0008 25D0     		beq	.L10
 292 000a 032B     		cmp	r3, #3
 293 000c 3DD0     		beq	.L11
 294 000e 012B     		cmp	r3, #1
 295 0010 04D0     		beq	.L22
 296              	.L12:
 279:Core/Src/main.c ****        Modo1Executado = 0;
 297              		.loc 1 279 4 view .LVU76
 279:Core/Src/main.c ****        Modo1Executado = 0;
 298              		.loc 1 279 22 is_stmt 0 view .LVU77
 299 0012 324B     		ldr	r3, .L26+4
 300 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 279:Core/Src/main.c ****        Modo1Executado = 0;
 301              		.loc 1 279 7 view .LVU78
 302 0016 012B     		cmp	r3, #1
 303 0018 58D0     		beq	.L23
 304              	.L9:
 283:Core/Src/main.c **** 
 305              		.loc 1 283 2 view .LVU79
 306 001a 10BD     		pop	{r4, pc}
 307              	.L22:
 235:Core/Src/main.c ****                //Liga
 308              		.loc 1 235 12 is_stmt 1 view .LVU80
 235:Core/Src/main.c ****                //Liga
 309              		.loc 1 235 16 is_stmt 0 view .LVU81
 310 001c 304B     		ldr	r3, .L26+8
 311 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 235:Core/Src/main.c ****                //Liga
 312              		.loc 1 235 15 view .LVU82
 313 0020 002B     		cmp	r3, #0
 314 0022 F6D1     		bne	.L12
 237:Core/Src/main.c ****  
 315              		.loc 1 237 16 is_stmt 1 view .LVU83
 316 0024 2F4C     		ldr	r4, .L26+12
 317 0026 0122     		movs	r2, #1
 318 0028 2021     		movs	r1, #32
 319 002a 2046     		mov	r0, r4
 320 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 321              	.LVL10:
 239:Core/Src/main.c ****                //Desliga
 322              		.loc 1 239 16 view .LVU84
 239:Core/Src/main.c ****                //Desliga
 323              		.loc 1 239 38 is_stmt 0 view .LVU85
 324 0030 2D4B     		ldr	r3, .L26+16
 325 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 239:Core/Src/main.c ****                //Desliga
 326              		.loc 1 239 16 view .LVU86
 327 0034 4FF47A70 		mov	r0, #1000
 328 0038 03FB00F0 		mul	r0, r3, r0
 329 003c FFF7FEFF 		bl	HAL_Delay
 330              	.LVL11:
 241:Core/Src/main.c ****  
 331              		.loc 1 241 16 is_stmt 1 view .LVU87
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 16


 332 0040 0022     		movs	r2, #0
 333 0042 2021     		movs	r1, #32
 334 0044 2046     		mov	r0, r4
 335 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 336              	.LVL12:
 243:Core/Src/main.c ****                Modo1Executado = 1;
 337              		.loc 1 243 16 view .LVU88
 243:Core/Src/main.c ****                Modo1Executado = 1;
 338              		.loc 1 243 30 is_stmt 0 view .LVU89
 339 004a 0123     		movs	r3, #1
 340 004c 234A     		ldr	r2, .L26+4
 341 004e 1370     		strb	r3, [r2]
 244:Core/Src/main.c ****  }
 342              		.loc 1 244 16 is_stmt 1 view .LVU90
 244:Core/Src/main.c ****  }
 343              		.loc 1 244 31 is_stmt 0 view .LVU91
 344 0050 234A     		ldr	r2, .L26+8
 345 0052 1370     		strb	r3, [r2]
 346 0054 DDE7     		b	.L12
 347              	.L10:
 348              	.LBB8:
 249:Core/Src/main.c ****              //Verifica se o tempo definido no timer ja passou
 349              		.loc 1 249 14 is_stmt 1 view .LVU92
 249:Core/Src/main.c ****              //Verifica se o tempo definido no timer ja passou
 350              		.loc 1 249 36 is_stmt 0 view .LVU93
 351 0056 FFF7FEFF 		bl	HAL_GetTick
 352              	.LVL13:
 251:Core/Src/main.c ****                  TempoAnteriorModo2 = TempoAtual;
 353              		.loc 1 251 14 is_stmt 1 view .LVU94
 251:Core/Src/main.c ****                  TempoAnteriorModo2 = TempoAtual;
 354              		.loc 1 251 29 is_stmt 0 view .LVU95
 355 005a 244B     		ldr	r3, .L26+20
 356 005c 1A68     		ldr	r2, [r3]
 357 005e 821A     		subs	r2, r0, r2
 251:Core/Src/main.c ****                  TempoAnteriorModo2 = TempoAtual;
 358              		.loc 1 251 66 view .LVU96
 359 0060 214B     		ldr	r3, .L26+16
 360 0062 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 361 0064 4FF47A71 		mov	r1, #1000
 362 0068 01FB03F3 		mul	r3, r1, r3
 251:Core/Src/main.c ****                  TempoAnteriorModo2 = TempoAtual;
 363              		.loc 1 251 17 view .LVU97
 364 006c 9A42     		cmp	r2, r3
 365 006e D0D3     		bcc	.L12
 252:Core/Src/main.c ****  
 366              		.loc 1 252 18 is_stmt 1 view .LVU98
 252:Core/Src/main.c ****  
 367              		.loc 1 252 37 is_stmt 0 view .LVU99
 368 0070 1E4B     		ldr	r3, .L26+20
 369 0072 1860     		str	r0, [r3]
 254:Core/Src/main.c ****                  HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, LedOnOffStateModo2 ? GPIO_PIN_SET : GPIO_PI
 370              		.loc 1 254 18 is_stmt 1 view .LVU100
 254:Core/Src/main.c ****                  HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, LedOnOffStateModo2 ? GPIO_PIN_SET : GPIO_PI
 371              		.loc 1 254 39 is_stmt 0 view .LVU101
 372 0074 1E4B     		ldr	r3, .L26+24
 373 0076 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 374 0078 B2FA82F2 		clz	r2, r2
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 17


 375 007c 5209     		lsrs	r2, r2, #5
 254:Core/Src/main.c ****                  HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, LedOnOffStateModo2 ? GPIO_PIN_SET : GPIO_PI
 376              		.loc 1 254 37 view .LVU102
 377 007e 1A70     		strb	r2, [r3]
 255:Core/Src/main.c ****              }
 378              		.loc 1 255 18 is_stmt 1 view .LVU103
 379 0080 2021     		movs	r1, #32
 380 0082 1848     		ldr	r0, .L26+12
 381              	.LVL14:
 255:Core/Src/main.c ****              }
 382              		.loc 1 255 18 is_stmt 0 view .LVU104
 383 0084 FFF7FEFF 		bl	HAL_GPIO_WritePin
 384              	.LVL15:
 255:Core/Src/main.c ****              }
 385              		.loc 1 255 18 view .LVU105
 386 0088 C3E7     		b	.L12
 387              	.L11:
 255:Core/Src/main.c ****              }
 388              		.loc 1 255 18 view .LVU106
 389              	.LBE8:
 390              	.LBB9:
 261:Core/Src/main.c ****             float umidadeDesejada = 50;
 391              		.loc 1 261 13 is_stmt 1 view .LVU107
 392              	.LVL16:
 262:Core/Src/main.c ****  
 393              		.loc 1 262 13 view .LVU108
 265:Core/Src/main.c ****                 HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, GPIO_PIN_SET);
 394              		.loc 1 265 13 view .LVU109
 265:Core/Src/main.c ****                 HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, GPIO_PIN_SET);
 395              		.loc 1 265 25 is_stmt 0 view .LVU110
 396 008a 1A4B     		ldr	r3, .L26+28
 397 008c D3ED007A 		vldr.32	s15, [r3]
 265:Core/Src/main.c ****                 HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, GPIO_PIN_SET);
 398              		.loc 1 265 16 view .LVU111
 399 0090 9FED197A 		vldr.32	s14, .L26+32
 400 0094 F4EEC77A 		vcmpe.f32	s15, s14
 401 0098 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 402 009c 0AD4     		bmi	.L24
 267:Core/Src/main.c ****                  HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, GPIO_PIN_RESET);
 403              		.loc 1 267 20 is_stmt 1 view .LVU112
 267:Core/Src/main.c ****                  HAL_GPIO_WritePin(GPIOA, LedOnOff_Pin, GPIO_PIN_RESET);
 404              		.loc 1 267 23 is_stmt 0 view .LVU113
 405 009e 9FED177A 		vldr.32	s14, .L26+36
 406 00a2 F4EEC77A 		vcmpe.f32	s15, s14
 407 00a6 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 408 00aa 09DA     		bge	.L25
 409              	.L15:
 271:Core/Src/main.c ****  }
 410              		.loc 1 271 6 is_stmt 1 view .LVU114
 411 00ac 0A20     		movs	r0, #10
 412 00ae FFF7FEFF 		bl	HAL_Delay
 413              	.LVL17:
 414              	.LBE9:
 273:Core/Src/main.c ****  
 415              		.loc 1 273 12 view .LVU115
 416 00b2 AEE7     		b	.L12
 417              	.L24:
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 18


 418              	.LBB10:
 266:Core/Src/main.c ****             } else if (Umidade >= umidadeDesejada) {
 419              		.loc 1 266 17 view .LVU116
 420 00b4 0122     		movs	r2, #1
 421 00b6 2021     		movs	r1, #32
 422 00b8 0A48     		ldr	r0, .L26+12
 423 00ba FFF7FEFF 		bl	HAL_GPIO_WritePin
 424              	.LVL18:
 425 00be F5E7     		b	.L15
 426              	.L25:
 268:Core/Src/main.c ****      }
 427              		.loc 1 268 18 view .LVU117
 428 00c0 0022     		movs	r2, #0
 429 00c2 2021     		movs	r1, #32
 430 00c4 0748     		ldr	r0, .L26+12
 431 00c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 432              	.LVL19:
 433 00ca EFE7     		b	.L15
 434              	.LVL20:
 435              	.L23:
 268:Core/Src/main.c ****      }
 436              		.loc 1 268 18 is_stmt 0 view .LVU118
 437              	.LBE10:
 280:Core/Src/main.c ****        LedOnOffStateModo2 = 0;
 438              		.loc 1 280 8 is_stmt 1 view .LVU119
 280:Core/Src/main.c ****        LedOnOffStateModo2 = 0;
 439              		.loc 1 280 23 is_stmt 0 view .LVU120
 440 00cc 0023     		movs	r3, #0
 441 00ce 044A     		ldr	r2, .L26+8
 442 00d0 1370     		strb	r3, [r2]
 281:Core/Src/main.c ****    }
 443              		.loc 1 281 8 is_stmt 1 view .LVU121
 281:Core/Src/main.c ****    }
 444              		.loc 1 281 27 is_stmt 0 view .LVU122
 445 00d2 074A     		ldr	r2, .L26+24
 446 00d4 1370     		strb	r3, [r2]
 283:Core/Src/main.c **** 
 447              		.loc 1 283 2 view .LVU123
 448 00d6 A0E7     		b	.L9
 449              	.L27:
 450              		.align	2
 451              	.L26:
 452 00d8 00000000 		.word	.LANCHOR1
 453 00dc 00000000 		.word	.LANCHOR4
 454 00e0 00000000 		.word	.LANCHOR2
 455 00e4 00000240 		.word	1073872896
 456 00e8 00000000 		.word	.LANCHOR3
 457 00ec 00000000 		.word	.LANCHOR5
 458 00f0 00000000 		.word	.LANCHOR6
 459 00f4 00000000 		.word	.LANCHOR7
 460 00f8 00000C42 		.word	1108082688
 461 00fc 00004842 		.word	1112014848
 462              		.cfi_endproc
 463              	.LFE222:
 465              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 466              		.align	1
 467              		.global	TIM2_IRQHandler
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 19


 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 472              	TIM2_IRQHandler:
 473              	.LFB223:
 286:Core/Src/main.c ****      // Verifica se a interrupção foi gerada pelo timer
 474              		.loc 1 286 2 is_stmt 1 view -0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 08B5     		push	{r3, lr}
 479              	.LCFI5:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 3, -8
 482              		.cfi_offset 14, -4
 288:Core/Src/main.c ****      {
 483              		.loc 1 288 6 view .LVU125
 288:Core/Src/main.c ****      {
 484              		.loc 1 288 10 is_stmt 0 view .LVU126
 485 0002 154B     		ldr	r3, .L35
 486 0004 1B68     		ldr	r3, [r3]
 487 0006 1A69     		ldr	r2, [r3, #16]
 288:Core/Src/main.c ****      {
 488              		.loc 1 288 9 view .LVU127
 489 0008 12F0010F 		tst	r2, #1
 490 000c 1CD0     		beq	.L28
 290:Core/Src/main.c ****  
 491              		.loc 1 290 10 is_stmt 1 view .LVU128
 492 000e 6FF00102 		mvn	r2, #1
 493 0012 1A61     		str	r2, [r3, #16]
 292:Core/Src/main.c ****          {
 494              		.loc 1 292 10 view .LVU129
 292:Core/Src/main.c ****          {
 495              		.loc 1 292 22 is_stmt 0 view .LVU130
 496 0014 114B     		ldr	r3, .L35+4
 497 0016 D3ED007A 		vldr.32	s15, [r3]
 292:Core/Src/main.c ****          {
 498              		.loc 1 292 13 view .LVU131
 499 001a 9FED117A 		vldr.32	s14, .L35+8
 500 001e F4EEC77A 		vcmpe.f32	s15, s14
 501 0022 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 502 0026 06DC     		bgt	.L30
 292:Core/Src/main.c ****          {
 503              		.loc 1 292 29 discriminator 1 view .LVU132
 504 0028 B3EE097A 		vmov.f32	s14, #2.5e+1
 505 002c F4EEC77A 		vcmpe.f32	s15, s14
 506 0030 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 507 0034 09D5     		bpl	.L33
 508              	.L30:
 294:Core/Src/main.c ****           EstadoSistema = 1;
 509              		.loc 1 294 11 is_stmt 1 view .LVU133
 510 0036 0122     		movs	r2, #1
 511 0038 4FF40041 		mov	r1, #32768
 512 003c 0948     		ldr	r0, .L35+12
 513 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 514              	.LVL21:
 295:Core/Src/main.c ****          }
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 20


 515              		.loc 1 295 11 view .LVU134
 295:Core/Src/main.c ****          }
 516              		.loc 1 295 25 is_stmt 0 view .LVU135
 517 0042 094B     		ldr	r3, .L35+16
 518 0044 0122     		movs	r2, #1
 519 0046 1A70     		strb	r2, [r3]
 520              	.L28:
 302:Core/Src/main.c **** /**
 521              		.loc 1 302 2 view .LVU136
 522 0048 08BD     		pop	{r3, pc}
 523              	.L33:
 299:Core/Src/main.c ****          }
 524              		.loc 1 299 14 is_stmt 1 view .LVU137
 525 004a 0022     		movs	r2, #0
 526 004c 4FF40041 		mov	r1, #32768
 527 0050 0448     		ldr	r0, .L35+12
 528 0052 FFF7FEFF 		bl	HAL_GPIO_WritePin
 529              	.LVL22:
 302:Core/Src/main.c **** /**
 530              		.loc 1 302 2 is_stmt 0 view .LVU138
 531 0056 F7E7     		b	.L28
 532              	.L36:
 533              		.align	2
 534              	.L35:
 535 0058 00000000 		.word	.LANCHOR8
 536 005c 00000000 		.word	.LANCHOR7
 537 0060 00008242 		.word	1115815936
 538 0064 00040240 		.word	1073873920
 539 0068 00000000 		.word	.LANCHOR4
 540              		.cfi_endproc
 541              	.LFE223:
 543              		.section	.text.Error_Handler,"ax",%progbits
 544              		.align	1
 545              		.global	Error_Handler
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 550              	Error_Handler:
 551              	.LFB228:
 507:Core/Src/main.c **** 
 508:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 509:Core/Src/main.c **** /* USER CODE END 4 */
 510:Core/Src/main.c **** 
 511:Core/Src/main.c **** /**
 512:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 513:Core/Src/main.c ****   * @retval None
 514:Core/Src/main.c ****   */
 515:Core/Src/main.c **** void Error_Handler(void)
 516:Core/Src/main.c **** {
 552              		.loc 1 516 1 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ Volatile: function does not return.
 555              		@ args = 0, pretend = 0, frame = 0
 556              		@ frame_needed = 0, uses_anonymous_args = 0
 557              		@ link register save eliminated.
 517:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 518:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 21


 519:Core/Src/main.c ****   __disable_irq();
 558              		.loc 1 519 3 view .LVU140
 559              	.LBB11:
 560              	.LBI11:
 561              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 22


  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 23


 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 24


 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 25


 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 26


 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 27


 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 28


 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 29


 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 30


 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 31


 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 32


 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 33


 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 34


 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 35


 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 36


 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 37


 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 562              		.loc 2 960 27 view .LVU141
 563              	.LBB12:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 38


 564              		.loc 2 962 3 view .LVU142
 565              		.syntax unified
 566              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 567 0000 72B6     		cpsid i
 568              	@ 0 "" 2
 569              		.thumb
 570              		.syntax unified
 571              	.L38:
 572              	.LBE12:
 573              	.LBE11:
 520:Core/Src/main.c ****   while (1)
 574              		.loc 1 520 3 discriminator 1 view .LVU143
 521:Core/Src/main.c ****   {
 522:Core/Src/main.c ****   }
 575              		.loc 1 522 3 discriminator 1 view .LVU144
 520:Core/Src/main.c ****   while (1)
 576              		.loc 1 520 9 discriminator 1 view .LVU145
 577 0002 FEE7     		b	.L38
 578              		.cfi_endproc
 579              	.LFE228:
 581              		.section	.text.MX_ADC1_Init,"ax",%progbits
 582              		.align	1
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 587              	MX_ADC1_Init:
 588              	.LFB225:
 354:Core/Src/main.c **** 
 589              		.loc 1 354 1 view -0
 590              		.cfi_startproc
 591              		@ args = 0, pretend = 0, frame = 16
 592              		@ frame_needed = 0, uses_anonymous_args = 0
 593 0000 00B5     		push	{lr}
 594              	.LCFI6:
 595              		.cfi_def_cfa_offset 4
 596              		.cfi_offset 14, -4
 597 0002 85B0     		sub	sp, sp, #20
 598              	.LCFI7:
 599              		.cfi_def_cfa_offset 24
 360:Core/Src/main.c **** 
 600              		.loc 1 360 3 view .LVU147
 360:Core/Src/main.c **** 
 601              		.loc 1 360 26 is_stmt 0 view .LVU148
 602 0004 0023     		movs	r3, #0
 603 0006 0093     		str	r3, [sp]
 604 0008 0193     		str	r3, [sp, #4]
 605 000a 0293     		str	r3, [sp, #8]
 606 000c 0393     		str	r3, [sp, #12]
 368:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 607              		.loc 1 368 3 is_stmt 1 view .LVU149
 368:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 608              		.loc 1 368 18 is_stmt 0 view .LVU150
 609 000e 1448     		ldr	r0, .L45
 610 0010 144A     		ldr	r2, .L45+4
 611 0012 0260     		str	r2, [r0]
 369:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 612              		.loc 1 369 3 is_stmt 1 view .LVU151
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 39


 369:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 613              		.loc 1 369 29 is_stmt 0 view .LVU152
 614 0014 4FF48032 		mov	r2, #65536
 615 0018 4260     		str	r2, [r0, #4]
 370:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 616              		.loc 1 370 3 is_stmt 1 view .LVU153
 370:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 617              		.loc 1 370 25 is_stmt 0 view .LVU154
 618 001a 8360     		str	r3, [r0, #8]
 371:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 619              		.loc 1 371 3 is_stmt 1 view .LVU155
 371:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = ENABLE;
 620              		.loc 1 371 27 is_stmt 0 view .LVU156
 621 001c 0361     		str	r3, [r0, #16]
 372:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 622              		.loc 1 372 3 is_stmt 1 view .LVU157
 372:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 623              		.loc 1 372 33 is_stmt 0 view .LVU158
 624 001e 0122     		movs	r2, #1
 625 0020 0276     		strb	r2, [r0, #24]
 373:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 626              		.loc 1 373 3 is_stmt 1 view .LVU159
 373:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 627              		.loc 1 373 36 is_stmt 0 view .LVU160
 628 0022 80F82030 		strb	r3, [r0, #32]
 374:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 629              		.loc 1 374 3 is_stmt 1 view .LVU161
 374:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 630              		.loc 1 374 35 is_stmt 0 view .LVU162
 631 0026 C362     		str	r3, [r0, #44]
 375:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 632              		.loc 1 375 3 is_stmt 1 view .LVU163
 375:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 633              		.loc 1 375 31 is_stmt 0 view .LVU164
 634 0028 0F49     		ldr	r1, .L45+8
 635 002a 8162     		str	r1, [r0, #40]
 376:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 636              		.loc 1 376 3 is_stmt 1 view .LVU165
 376:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 637              		.loc 1 376 24 is_stmt 0 view .LVU166
 638 002c C360     		str	r3, [r0, #12]
 377:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 639              		.loc 1 377 3 is_stmt 1 view .LVU167
 377:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 640              		.loc 1 377 30 is_stmt 0 view .LVU168
 641 002e C261     		str	r2, [r0, #28]
 378:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 642              		.loc 1 378 3 is_stmt 1 view .LVU169
 378:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 643              		.loc 1 378 36 is_stmt 0 view .LVU170
 644 0030 80F83030 		strb	r3, [r0, #48]
 379:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 645              		.loc 1 379 3 is_stmt 1 view .LVU171
 379:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 646              		.loc 1 379 27 is_stmt 0 view .LVU172
 647 0034 4261     		str	r2, [r0, #20]
 380:Core/Src/main.c ****   {
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 40


 648              		.loc 1 380 3 is_stmt 1 view .LVU173
 380:Core/Src/main.c ****   {
 649              		.loc 1 380 7 is_stmt 0 view .LVU174
 650 0036 FFF7FEFF 		bl	HAL_ADC_Init
 651              	.LVL23:
 380:Core/Src/main.c ****   {
 652              		.loc 1 380 6 view .LVU175
 653 003a 68B9     		cbnz	r0, .L43
 387:Core/Src/main.c ****   sConfig.Rank = 1;
 654              		.loc 1 387 3 is_stmt 1 view .LVU176
 387:Core/Src/main.c ****   sConfig.Rank = 1;
 655              		.loc 1 387 19 is_stmt 0 view .LVU177
 656 003c 0823     		movs	r3, #8
 657 003e 0093     		str	r3, [sp]
 388:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 658              		.loc 1 388 3 is_stmt 1 view .LVU178
 388:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 659              		.loc 1 388 16 is_stmt 0 view .LVU179
 660 0040 0123     		movs	r3, #1
 661 0042 0193     		str	r3, [sp, #4]
 389:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 662              		.loc 1 389 3 is_stmt 1 view .LVU180
 389:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 663              		.loc 1 389 24 is_stmt 0 view .LVU181
 664 0044 0023     		movs	r3, #0
 665 0046 0293     		str	r3, [sp, #8]
 390:Core/Src/main.c ****   {
 666              		.loc 1 390 3 is_stmt 1 view .LVU182
 390:Core/Src/main.c ****   {
 667              		.loc 1 390 7 is_stmt 0 view .LVU183
 668 0048 6946     		mov	r1, sp
 669 004a 0548     		ldr	r0, .L45
 670 004c FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 671              	.LVL24:
 390:Core/Src/main.c ****   {
 672              		.loc 1 390 6 view .LVU184
 673 0050 20B9     		cbnz	r0, .L44
 398:Core/Src/main.c **** 
 674              		.loc 1 398 1 view .LVU185
 675 0052 05B0     		add	sp, sp, #20
 676              	.LCFI8:
 677              		.cfi_remember_state
 678              		.cfi_def_cfa_offset 4
 679              		@ sp needed
 680 0054 5DF804FB 		ldr	pc, [sp], #4
 681              	.L43:
 682              	.LCFI9:
 683              		.cfi_restore_state
 382:Core/Src/main.c ****   }
 684              		.loc 1 382 5 is_stmt 1 view .LVU186
 685 0058 FFF7FEFF 		bl	Error_Handler
 686              	.LVL25:
 687              	.L44:
 392:Core/Src/main.c ****   }
 688              		.loc 1 392 5 view .LVU187
 689 005c FFF7FEFF 		bl	Error_Handler
 690              	.LVL26:
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 41


 691              	.L46:
 692              		.align	2
 693              	.L45:
 694 0060 00000000 		.word	.LANCHOR0
 695 0064 00200140 		.word	1073815552
 696 0068 0100000F 		.word	251658241
 697              		.cfi_endproc
 698              	.LFE225:
 700              		.section	.text.MX_TIM2_Init,"ax",%progbits
 701              		.align	1
 702              		.syntax unified
 703              		.thumb
 704              		.thumb_func
 706              	MX_TIM2_Init:
 707              	.LFB226:
 406:Core/Src/main.c **** 
 708              		.loc 1 406 1 view -0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 24
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712 0000 00B5     		push	{lr}
 713              	.LCFI10:
 714              		.cfi_def_cfa_offset 4
 715              		.cfi_offset 14, -4
 716 0002 87B0     		sub	sp, sp, #28
 717              	.LCFI11:
 718              		.cfi_def_cfa_offset 32
 412:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 719              		.loc 1 412 3 view .LVU189
 412:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 720              		.loc 1 412 26 is_stmt 0 view .LVU190
 721 0004 0023     		movs	r3, #0
 722 0006 0293     		str	r3, [sp, #8]
 723 0008 0393     		str	r3, [sp, #12]
 724 000a 0493     		str	r3, [sp, #16]
 725 000c 0593     		str	r3, [sp, #20]
 413:Core/Src/main.c **** 
 726              		.loc 1 413 3 is_stmt 1 view .LVU191
 413:Core/Src/main.c **** 
 727              		.loc 1 413 27 is_stmt 0 view .LVU192
 728 000e 0093     		str	r3, [sp]
 729 0010 0193     		str	r3, [sp, #4]
 418:Core/Src/main.c ****   htim2.Init.Prescaler = 83;
 730              		.loc 1 418 3 is_stmt 1 view .LVU193
 418:Core/Src/main.c ****   htim2.Init.Prescaler = 83;
 731              		.loc 1 418 18 is_stmt 0 view .LVU194
 732 0012 1348     		ldr	r0, .L55
 733 0014 4FF08042 		mov	r2, #1073741824
 734 0018 0260     		str	r2, [r0]
 419:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 735              		.loc 1 419 3 is_stmt 1 view .LVU195
 419:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 736              		.loc 1 419 24 is_stmt 0 view .LVU196
 737 001a 5322     		movs	r2, #83
 738 001c 4260     		str	r2, [r0, #4]
 420:Core/Src/main.c ****   htim2.Init.Period = 999999;
 739              		.loc 1 420 3 is_stmt 1 view .LVU197
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 42


 420:Core/Src/main.c ****   htim2.Init.Period = 999999;
 740              		.loc 1 420 26 is_stmt 0 view .LVU198
 741 001e 8360     		str	r3, [r0, #8]
 421:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 742              		.loc 1 421 3 is_stmt 1 view .LVU199
 421:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 743              		.loc 1 421 21 is_stmt 0 view .LVU200
 744 0020 104A     		ldr	r2, .L55+4
 745 0022 C260     		str	r2, [r0, #12]
 422:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 746              		.loc 1 422 3 is_stmt 1 view .LVU201
 422:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 747              		.loc 1 422 28 is_stmt 0 view .LVU202
 748 0024 0361     		str	r3, [r0, #16]
 423:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 749              		.loc 1 423 3 is_stmt 1 view .LVU203
 423:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 750              		.loc 1 423 32 is_stmt 0 view .LVU204
 751 0026 8361     		str	r3, [r0, #24]
 424:Core/Src/main.c ****   {
 752              		.loc 1 424 3 is_stmt 1 view .LVU205
 424:Core/Src/main.c ****   {
 753              		.loc 1 424 7 is_stmt 0 view .LVU206
 754 0028 FFF7FEFF 		bl	HAL_TIM_Base_Init
 755              	.LVL27:
 424:Core/Src/main.c ****   {
 756              		.loc 1 424 6 view .LVU207
 757 002c 90B9     		cbnz	r0, .L52
 428:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 758              		.loc 1 428 3 is_stmt 1 view .LVU208
 428:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 759              		.loc 1 428 34 is_stmt 0 view .LVU209
 760 002e 4FF48053 		mov	r3, #4096
 761 0032 0293     		str	r3, [sp, #8]
 429:Core/Src/main.c ****   {
 762              		.loc 1 429 3 is_stmt 1 view .LVU210
 429:Core/Src/main.c ****   {
 763              		.loc 1 429 7 is_stmt 0 view .LVU211
 764 0034 02A9     		add	r1, sp, #8
 765 0036 0A48     		ldr	r0, .L55
 766 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 767              	.LVL28:
 429:Core/Src/main.c ****   {
 768              		.loc 1 429 6 view .LVU212
 769 003c 60B9     		cbnz	r0, .L53
 433:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 770              		.loc 1 433 3 is_stmt 1 view .LVU213
 433:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 771              		.loc 1 433 37 is_stmt 0 view .LVU214
 772 003e 0023     		movs	r3, #0
 773 0040 0093     		str	r3, [sp]
 434:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 774              		.loc 1 434 3 is_stmt 1 view .LVU215
 434:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 775              		.loc 1 434 33 is_stmt 0 view .LVU216
 776 0042 0193     		str	r3, [sp, #4]
 435:Core/Src/main.c ****   {
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 43


 777              		.loc 1 435 3 is_stmt 1 view .LVU217
 435:Core/Src/main.c ****   {
 778              		.loc 1 435 7 is_stmt 0 view .LVU218
 779 0044 6946     		mov	r1, sp
 780 0046 0648     		ldr	r0, .L55
 781 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 782              	.LVL29:
 435:Core/Src/main.c ****   {
 783              		.loc 1 435 6 view .LVU219
 784 004c 30B9     		cbnz	r0, .L54
 443:Core/Src/main.c **** 
 785              		.loc 1 443 1 view .LVU220
 786 004e 07B0     		add	sp, sp, #28
 787              	.LCFI12:
 788              		.cfi_remember_state
 789              		.cfi_def_cfa_offset 4
 790              		@ sp needed
 791 0050 5DF804FB 		ldr	pc, [sp], #4
 792              	.L52:
 793              	.LCFI13:
 794              		.cfi_restore_state
 426:Core/Src/main.c ****   }
 795              		.loc 1 426 5 is_stmt 1 view .LVU221
 796 0054 FFF7FEFF 		bl	Error_Handler
 797              	.LVL30:
 798              	.L53:
 431:Core/Src/main.c ****   }
 799              		.loc 1 431 5 view .LVU222
 800 0058 FFF7FEFF 		bl	Error_Handler
 801              	.LVL31:
 802              	.L54:
 437:Core/Src/main.c ****   }
 803              		.loc 1 437 5 view .LVU223
 804 005c FFF7FEFF 		bl	Error_Handler
 805              	.LVL32:
 806              	.L56:
 807              		.align	2
 808              	.L55:
 809 0060 00000000 		.word	.LANCHOR8
 810 0064 3F420F00 		.word	999999
 811              		.cfi_endproc
 812              	.LFE226:
 814              		.section	.text.SystemClock_Config,"ax",%progbits
 815              		.align	1
 816              		.global	SystemClock_Config
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 821              	SystemClock_Config:
 822              	.LFB224:
 308:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 823              		.loc 1 308 1 view -0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 80
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827 0000 00B5     		push	{lr}
 828              	.LCFI14:
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 44


 829              		.cfi_def_cfa_offset 4
 830              		.cfi_offset 14, -4
 831 0002 95B0     		sub	sp, sp, #84
 832              	.LCFI15:
 833              		.cfi_def_cfa_offset 88
 309:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 834              		.loc 1 309 3 view .LVU225
 309:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 835              		.loc 1 309 22 is_stmt 0 view .LVU226
 836 0004 3022     		movs	r2, #48
 837 0006 0021     		movs	r1, #0
 838 0008 08A8     		add	r0, sp, #32
 839 000a FFF7FEFF 		bl	memset
 840              	.LVL33:
 310:Core/Src/main.c **** 
 841              		.loc 1 310 3 is_stmt 1 view .LVU227
 310:Core/Src/main.c **** 
 842              		.loc 1 310 22 is_stmt 0 view .LVU228
 843 000e 0023     		movs	r3, #0
 844 0010 0393     		str	r3, [sp, #12]
 845 0012 0493     		str	r3, [sp, #16]
 846 0014 0593     		str	r3, [sp, #20]
 847 0016 0693     		str	r3, [sp, #24]
 848 0018 0793     		str	r3, [sp, #28]
 314:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 849              		.loc 1 314 3 is_stmt 1 view .LVU229
 850              	.LBB13:
 314:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 851              		.loc 1 314 3 view .LVU230
 852 001a 0193     		str	r3, [sp, #4]
 314:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 853              		.loc 1 314 3 view .LVU231
 854 001c 1F4A     		ldr	r2, .L63
 855 001e 116C     		ldr	r1, [r2, #64]
 856 0020 41F08051 		orr	r1, r1, #268435456
 857 0024 1164     		str	r1, [r2, #64]
 314:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 858              		.loc 1 314 3 view .LVU232
 859 0026 126C     		ldr	r2, [r2, #64]
 860 0028 02F08052 		and	r2, r2, #268435456
 861 002c 0192     		str	r2, [sp, #4]
 314:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 862              		.loc 1 314 3 view .LVU233
 863 002e 019A     		ldr	r2, [sp, #4]
 864              	.LBE13:
 314:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 865              		.loc 1 314 3 view .LVU234
 315:Core/Src/main.c **** 
 866              		.loc 1 315 3 view .LVU235
 867              	.LBB14:
 315:Core/Src/main.c **** 
 868              		.loc 1 315 3 view .LVU236
 869 0030 0293     		str	r3, [sp, #8]
 315:Core/Src/main.c **** 
 870              		.loc 1 315 3 view .LVU237
 871 0032 1B4B     		ldr	r3, .L63+4
 872 0034 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 45


 873 0036 42F44042 		orr	r2, r2, #49152
 874 003a 1A60     		str	r2, [r3]
 315:Core/Src/main.c **** 
 875              		.loc 1 315 3 view .LVU238
 876 003c 1B68     		ldr	r3, [r3]
 877 003e 03F44043 		and	r3, r3, #49152
 878 0042 0293     		str	r3, [sp, #8]
 315:Core/Src/main.c **** 
 879              		.loc 1 315 3 view .LVU239
 880 0044 029B     		ldr	r3, [sp, #8]
 881              	.LBE14:
 315:Core/Src/main.c **** 
 882              		.loc 1 315 3 view .LVU240
 320:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 883              		.loc 1 320 3 view .LVU241
 320:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 884              		.loc 1 320 36 is_stmt 0 view .LVU242
 885 0046 0123     		movs	r3, #1
 886 0048 0893     		str	r3, [sp, #32]
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 887              		.loc 1 321 3 is_stmt 1 view .LVU243
 321:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 888              		.loc 1 321 30 is_stmt 0 view .LVU244
 889 004a 4FF48033 		mov	r3, #65536
 890 004e 0993     		str	r3, [sp, #36]
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 891              		.loc 1 322 3 is_stmt 1 view .LVU245
 322:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 892              		.loc 1 322 34 is_stmt 0 view .LVU246
 893 0050 0223     		movs	r3, #2
 894 0052 0E93     		str	r3, [sp, #56]
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 895              		.loc 1 323 3 is_stmt 1 view .LVU247
 323:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 896              		.loc 1 323 35 is_stmt 0 view .LVU248
 897 0054 4FF48002 		mov	r2, #4194304
 898 0058 0F92     		str	r2, [sp, #60]
 324:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 899              		.loc 1 324 3 is_stmt 1 view .LVU249
 324:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 900              		.loc 1 324 30 is_stmt 0 view .LVU250
 901 005a 1922     		movs	r2, #25
 902 005c 1092     		str	r2, [sp, #64]
 325:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 903              		.loc 1 325 3 is_stmt 1 view .LVU251
 325:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 904              		.loc 1 325 30 is_stmt 0 view .LVU252
 905 005e C022     		movs	r2, #192
 906 0060 1192     		str	r2, [sp, #68]
 326:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 907              		.loc 1 326 3 is_stmt 1 view .LVU253
 326:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 908              		.loc 1 326 30 is_stmt 0 view .LVU254
 909 0062 1293     		str	r3, [sp, #72]
 327:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 910              		.loc 1 327 3 is_stmt 1 view .LVU255
 327:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 46


 911              		.loc 1 327 30 is_stmt 0 view .LVU256
 912 0064 0423     		movs	r3, #4
 913 0066 1393     		str	r3, [sp, #76]
 328:Core/Src/main.c ****   {
 914              		.loc 1 328 3 is_stmt 1 view .LVU257
 328:Core/Src/main.c ****   {
 915              		.loc 1 328 7 is_stmt 0 view .LVU258
 916 0068 08A8     		add	r0, sp, #32
 917 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 918              	.LVL34:
 328:Core/Src/main.c ****   {
 919              		.loc 1 328 6 view .LVU259
 920 006e 88B9     		cbnz	r0, .L61
 335:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 921              		.loc 1 335 3 is_stmt 1 view .LVU260
 335:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 922              		.loc 1 335 31 is_stmt 0 view .LVU261
 923 0070 0F23     		movs	r3, #15
 924 0072 0393     		str	r3, [sp, #12]
 337:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 925              		.loc 1 337 3 is_stmt 1 view .LVU262
 337:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 926              		.loc 1 337 34 is_stmt 0 view .LVU263
 927 0074 0223     		movs	r3, #2
 928 0076 0493     		str	r3, [sp, #16]
 338:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 929              		.loc 1 338 3 is_stmt 1 view .LVU264
 338:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 930              		.loc 1 338 35 is_stmt 0 view .LVU265
 931 0078 0023     		movs	r3, #0
 932 007a 0593     		str	r3, [sp, #20]
 339:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 933              		.loc 1 339 3 is_stmt 1 view .LVU266
 339:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 934              		.loc 1 339 36 is_stmt 0 view .LVU267
 935 007c 4FF48052 		mov	r2, #4096
 936 0080 0692     		str	r2, [sp, #24]
 340:Core/Src/main.c **** 
 937              		.loc 1 340 3 is_stmt 1 view .LVU268
 340:Core/Src/main.c **** 
 938              		.loc 1 340 36 is_stmt 0 view .LVU269
 939 0082 0793     		str	r3, [sp, #28]
 342:Core/Src/main.c ****   {
 940              		.loc 1 342 3 is_stmt 1 view .LVU270
 342:Core/Src/main.c ****   {
 941              		.loc 1 342 7 is_stmt 0 view .LVU271
 942 0084 0321     		movs	r1, #3
 943 0086 03A8     		add	r0, sp, #12
 944 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 945              	.LVL35:
 342:Core/Src/main.c ****   {
 946              		.loc 1 342 6 view .LVU272
 947 008c 20B9     		cbnz	r0, .L62
 346:Core/Src/main.c **** 
 948              		.loc 1 346 1 view .LVU273
 949 008e 15B0     		add	sp, sp, #84
 950              	.LCFI16:
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 47


 951              		.cfi_remember_state
 952              		.cfi_def_cfa_offset 4
 953              		@ sp needed
 954 0090 5DF804FB 		ldr	pc, [sp], #4
 955              	.L61:
 956              	.LCFI17:
 957              		.cfi_restore_state
 330:Core/Src/main.c ****   }
 958              		.loc 1 330 5 is_stmt 1 view .LVU274
 959 0094 FFF7FEFF 		bl	Error_Handler
 960              	.LVL36:
 961              	.L62:
 344:Core/Src/main.c ****   }
 962              		.loc 1 344 5 view .LVU275
 963 0098 FFF7FEFF 		bl	Error_Handler
 964              	.LVL37:
 965              	.L64:
 966              		.align	2
 967              	.L63:
 968 009c 00380240 		.word	1073887232
 969 00a0 00700040 		.word	1073770496
 970              		.cfi_endproc
 971              	.LFE224:
 973              		.global	__aeabi_i2d
 974              		.global	__aeabi_dmul
 975              		.global	__aeabi_ddiv
 976              		.global	__aeabi_d2f
 977              		.section	.text.main,"ax",%progbits
 978              		.align	1
 979              		.global	main
 980              		.syntax unified
 981              		.thumb
 982              		.thumb_func
 984              	main:
 985              	.LFB221:
 108:Core/Src/main.c **** 
 986              		.loc 1 108 1 view -0
 987              		.cfi_startproc
 988              		@ args = 0, pretend = 0, frame = 8
 989              		@ frame_needed = 0, uses_anonymous_args = 0
 990 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 991              	.LCFI18:
 992              		.cfi_def_cfa_offset 20
 993              		.cfi_offset 4, -20
 994              		.cfi_offset 5, -16
 995              		.cfi_offset 6, -12
 996              		.cfi_offset 7, -8
 997              		.cfi_offset 14, -4
 998 0002 2DED028B 		vpush.64	{d8}
 999              	.LCFI19:
 1000              		.cfi_def_cfa_offset 28
 1001              		.cfi_offset 80, -28
 1002              		.cfi_offset 81, -24
 1003 0006 83B0     		sub	sp, sp, #12
 1004              	.LCFI20:
 1005              		.cfi_def_cfa_offset 40
 116:Core/Src/main.c **** 
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 48


 1006              		.loc 1 116 3 view .LVU277
 1007 0008 FFF7FEFF 		bl	HAL_Init
 1008              	.LVL38:
 123:Core/Src/main.c **** 
 1009              		.loc 1 123 3 view .LVU278
 1010 000c FFF7FEFF 		bl	SystemClock_Config
 1011              	.LVL39:
 130:Core/Src/main.c ****   MX_ADC1_Init();
 1012              		.loc 1 130 3 view .LVU279
 1013 0010 FFF7FEFF 		bl	MX_GPIO_Init
 1014              	.LVL40:
 131:Core/Src/main.c ****   MX_TIM2_Init();
 1015              		.loc 1 131 3 view .LVU280
 1016 0014 FFF7FEFF 		bl	MX_ADC1_Init
 1017              	.LVL41:
 132:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1018              		.loc 1 132 3 view .LVU281
 1019 0018 FFF7FEFF 		bl	MX_TIM2_Init
 1020              	.LVL42:
 135:Core/Src/main.c ****   TempoSetado = Tempo[LedTimerAceso];
 1021              		.loc 1 135 3 view .LVU282
 135:Core/Src/main.c ****   TempoSetado = Tempo[LedTimerAceso];
 1022              		.loc 1 135 37 is_stmt 0 view .LVU283
 1023 001c A24D     		ldr	r5, .L77+8
 1024 001e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 135:Core/Src/main.c ****   TempoSetado = Tempo[LedTimerAceso];
 1025              		.loc 1 135 3 view .LVU284
 1026 0020 A24C     		ldr	r4, .L77+12
 1027 0022 0122     		movs	r2, #1
 1028 0024 A249     		ldr	r1, .L77+16
 1029 0026 C95C     		ldrb	r1, [r1, r3]	@ zero_extendqisi2
 1030 0028 2046     		mov	r0, r4
 1031 002a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1032              	.LVL43:
 136:Core/Src/main.c **** 
 1033              		.loc 1 136 3 is_stmt 1 view .LVU285
 136:Core/Src/main.c **** 
 1034              		.loc 1 136 22 is_stmt 0 view .LVU286
 1035 002e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1036 0030 A04A     		ldr	r2, .L77+20
 1037 0032 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 136:Core/Src/main.c **** 
 1038              		.loc 1 136 15 view .LVU287
 1039 0034 A04B     		ldr	r3, .L77+24
 1040 0036 1A70     		strb	r2, [r3]
 138:Core/Src/main.c **** 
 1041              		.loc 1 138 3 is_stmt 1 view .LVU288
 1042 0038 0122     		movs	r2, #1
 1043 003a 4FF40051 		mov	r1, #8192
 1044 003e 9F48     		ldr	r0, .L77+28
 1045 0040 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1046              	.LVL44:
 140:Core/Src/main.c **** 
 1047              		.loc 1 140 3 view .LVU289
 1048 0044 0122     		movs	r2, #1
 1049 0046 4021     		movs	r1, #64
 1050 0048 2046     		mov	r0, r4
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 49


 1051 004a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1052              	.LVL45:
 142:Core/Src/main.c **** 
 1053              		.loc 1 142 3 view .LVU290
 1054 004e 9C4C     		ldr	r4, .L77+32
 1055 0050 2046     		mov	r0, r4
 1056 0052 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1057              	.LVL46:
 144:Core/Src/main.c **** 
 1058              		.loc 1 144 3 view .LVU291
 1059 0056 9B48     		ldr	r0, .L77+36
 1060 0058 FFF7FEFF 		bl	HAL_ADC_Start
 1061              	.LVL47:
 146:Core/Src/main.c ****   /* USER CODE END 2 */
 1062              		.loc 1 146 3 view .LVU292
 1063 005c 2046     		mov	r0, r4
 1064 005e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 1065              	.LVL48:
 1066 0062 47E0     		b	.L71
 1067              	.LVL49:
 1068              	.L74:
 1069              	.LBB15:
 176:Core/Src/main.c ****     {
 1070              		.loc 1 176 42 is_stmt 0 discriminator 1 view .LVU293
 1071 0064 0028     		cmp	r0, #0
 1072 0066 40F0BA80 		bne	.L66
 176:Core/Src/main.c ****     {
 1073              		.loc 1 176 105 discriminator 2 view .LVU294
 1074 006a 974B     		ldr	r3, .L77+40
 1075 006c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 176:Core/Src/main.c ****     {
 1076              		.loc 1 176 88 discriminator 2 view .LVU295
 1077 006e 012B     		cmp	r3, #1
 1078 0070 40F0B580 		bne	.L66
 178:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, LedsTimer[LedTimerAceso], GPIO_PIN_RESET);
 1079              		.loc 1 178 6 is_stmt 1 view .LVU296
 1080 0074 6420     		movs	r0, #100
 1081              	.LVL50:
 178:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, LedsTimer[LedTimerAceso], GPIO_PIN_RESET);
 1082              		.loc 1 178 6 is_stmt 0 view .LVU297
 1083 0076 FFF7FEFF 		bl	HAL_Delay
 1084              	.LVL51:
 179:Core/Src/main.c ****   
 1085              		.loc 1 179 7 is_stmt 1 view .LVU298
 179:Core/Src/main.c ****   
 1086              		.loc 1 179 41 is_stmt 0 view .LVU299
 1087 007a 8D4F     		ldr	r7, .L77+16
 1088 007c 8A4D     		ldr	r5, .L77+8
 1089 007e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 179:Core/Src/main.c ****   
 1090              		.loc 1 179 7 view .LVU300
 1091 0080 8A4E     		ldr	r6, .L77+12
 1092 0082 0022     		movs	r2, #0
 1093 0084 F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 1094 0086 3046     		mov	r0, r6
 1095 0088 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1096              	.LVL52:
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 50


 181:Core/Src/main.c ****   
 1097              		.loc 1 181 7 is_stmt 1 view .LVU301
 181:Core/Src/main.c ****   
 1098              		.loc 1 181 38 is_stmt 0 view .LVU302
 1099 008c 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1100 008e 0132     		adds	r2, r2, #1
 181:Core/Src/main.c ****   
 1101              		.loc 1 181 43 view .LVU303
 1102 0090 8E4B     		ldr	r3, .L77+44
 1103 0092 83FB0213 		smull	r1, r3, r3, r2
 1104 0096 5B10     		asrs	r3, r3, #1
 1105 0098 03EB8303 		add	r3, r3, r3, lsl #2
 1106 009c D31A     		subs	r3, r2, r3
 181:Core/Src/main.c ****   
 1107              		.loc 1 181 21 view .LVU304
 1108 009e DBB2     		uxtb	r3, r3
 1109 00a0 2B70     		strb	r3, [r5]
 183:Core/Src/main.c ****       HAL_Delay(50);
 1110              		.loc 1 183 7 is_stmt 1 view .LVU305
 1111 00a2 0122     		movs	r2, #1
 1112 00a4 F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 1113 00a6 3046     		mov	r0, r6
 1114 00a8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1115              	.LVL53:
 184:Core/Src/main.c ****     }
 1116              		.loc 1 184 7 view .LVU306
 1117 00ac 3220     		movs	r0, #50
 1118 00ae FFF7FEFF 		bl	HAL_Delay
 1119              	.LVL54:
 1120 00b2 94E0     		b	.L66
 1121              	.LVL55:
 1122              	.L75:
 193:Core/Src/main.c ****          HAL_Delay(100);
 1123              		.loc 1 193 43 is_stmt 0 discriminator 1 view .LVU307
 1124 00b4 0028     		cmp	r0, #0
 1125 00b6 40F0A580 		bne	.L67
 194:Core/Src/main.c ****          EstadoSistema = !EstadoSistema;
 1126              		.loc 1 194 10 is_stmt 1 view .LVU308
 1127 00ba 6420     		movs	r0, #100
 1128              	.LVL56:
 194:Core/Src/main.c ****          EstadoSistema = !EstadoSistema;
 1129              		.loc 1 194 10 is_stmt 0 view .LVU309
 1130 00bc FFF7FEFF 		bl	HAL_Delay
 1131              	.LVL57:
 195:Core/Src/main.c ****      }
 1132              		.loc 1 195 10 is_stmt 1 view .LVU310
 195:Core/Src/main.c ****      }
 1133              		.loc 1 195 26 is_stmt 0 view .LVU311
 1134 00c0 814A     		ldr	r2, .L77+40
 1135 00c2 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1136 00c4 B3FA83F3 		clz	r3, r3
 1137 00c8 5B09     		lsrs	r3, r3, #5
 195:Core/Src/main.c ****      }
 1138              		.loc 1 195 24 view .LVU312
 1139 00ca 1370     		strb	r3, [r2]
 1140 00cc 9AE0     		b	.L67
 1141              	.L76:
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 51


 202:Core/Src/main.c ****          ExecutarModo();
 1142              		.loc 1 202 10 is_stmt 1 view .LVU313
 202:Core/Src/main.c ****          ExecutarModo();
 1143              		.loc 1 202 26 is_stmt 0 view .LVU314
 1144 00ce 804B     		ldr	r3, .L77+48
 1145 00d0 1A68     		ldr	r2, [r3]	@ float
 1146 00d2 804B     		ldr	r3, .L77+52
 1147 00d4 1A60     		str	r2, [r3]	@ float
 203:Core/Src/main.c ****      }else{
 1148              		.loc 1 203 10 is_stmt 1 view .LVU315
 1149 00d6 FFF7FEFF 		bl	ExecutarModo
 1150              	.LVL58:
 1151              	.L69:
 210:Core/Src/main.c ****  
 1152              		.loc 1 210 2 view .LVU316
 210:Core/Src/main.c ****  
 1153              		.loc 1 210 33 is_stmt 0 view .LVU317
 1154 00da 4FF40071 		mov	r1, #512
 1155 00de 7348     		ldr	r0, .L77+12
 1156 00e0 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1157              	.LVL59:
 1158 00e4 0446     		mov	r4, r0
 1159              	.LVL60:
 212:Core/Src/main.c ****        HAL_Delay(100);
 1160              		.loc 1 212 4 is_stmt 1 view .LVU318
 212:Core/Src/main.c ****        HAL_Delay(100);
 1161              		.loc 1 212 32 is_stmt 0 view .LVU319
 1162 00e6 7C4B     		ldr	r3, .L77+56
 1163 00e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 212:Core/Src/main.c ****        HAL_Delay(100);
 1164              		.loc 1 212 7 view .LVU320
 1165 00ea 012B     		cmp	r3, #1
 1166 00ec 00F0A080 		beq	.L73
 1167              	.LVL61:
 1168              	.L70:
 220:Core/Src/main.c ****  
 1169              		.loc 1 220 4 is_stmt 1 view .LVU321
 220:Core/Src/main.c ****  
 1170              		.loc 1 220 28 is_stmt 0 view .LVU322
 1171 00f0 794B     		ldr	r3, .L77+56
 1172 00f2 1C70     		strb	r4, [r3]
 1173              	.LBE15:
 151:Core/Src/main.c ****   {
 1174              		.loc 1 151 9 is_stmt 1 view .LVU323
 1175              	.L71:
 151:Core/Src/main.c ****   {
 1176              		.loc 1 151 3 view .LVU324
 1177              	.LBB16:
 155:Core/Src/main.c ****  
 1178              		.loc 1 155 6 view .LVU325
 155:Core/Src/main.c ****  
 1179              		.loc 1 155 27 is_stmt 0 view .LVU326
 1180 00f4 FFF7FEFF 		bl	Read_ADC_Value
 1181              	.LVL62:
 158:Core/Src/main.c ****  //------------------------------------------------------------------------------------------------
 1182              		.loc 1 158 6 is_stmt 1 view .LVU327
 158:Core/Src/main.c ****  //------------------------------------------------------------------------------------------------
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 52


 1183              		.loc 1 158 35 is_stmt 0 view .LVU328
 1184 00f8 6423     		movs	r3, #100
 1185 00fa 03FB00F0 		mul	r0, r3, r0
 1186              	.LVL63:
 158:Core/Src/main.c ****  //------------------------------------------------------------------------------------------------
 1187              		.loc 1 158 42 view .LVU329
 1188 00fe 774B     		ldr	r3, .L77+60
 1189 0100 A3FB0023 		umull	r2, r3, r3, r0
 1190 0104 C01A     		subs	r0, r0, r3
 1191 0106 03EB5003 		add	r3, r3, r0, lsr #1
 1192 010a DB0A     		lsrs	r3, r3, #11
 158:Core/Src/main.c ****  //------------------------------------------------------------------------------------------------
 1193              		.loc 1 158 16 view .LVU330
 1194 010c 07EE903A 		vmov	s15, r3	@ int
 1195 0110 B8EE678A 		vcvt.f32.u32	s16, s15
 158:Core/Src/main.c ****  //------------------------------------------------------------------------------------------------
 1196              		.loc 1 158 14 view .LVU331
 1197 0114 6E4B     		ldr	r3, .L77+48
 1198 0116 83ED008A 		vstr.32	s16, [r3]
 161:Core/Src/main.c ****  
 1199              		.loc 1 161 6 is_stmt 1 view .LVU332
 161:Core/Src/main.c ****  
 1200              		.loc 1 161 27 is_stmt 0 view .LVU333
 1201 011a 674B     		ldr	r3, .L77+24
 1202 011c 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 1203 011e 07EE905A 		vmov	s15, r5	@ int
 1204 0122 F8EEE77A 		vcvt.f32.s32	s15, s15
 1205 0126 6E4B     		ldr	r3, .L77+64
 1206 0128 93ED007A 		vldr.32	s14, [r3]
 1207 012c 67EE877A 		vmul.f32	s15, s15, s14
 161:Core/Src/main.c ****  
 1208              		.loc 1 161 19 view .LVU334
 1209 0130 FCEEE77A 		vcvt.u32.f32	s15, s15
 1210 0134 CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1211 0138 9DF80440 		ldrb	r4, [sp, #4]	@ zero_extendqisi2
 1212 013c 694B     		ldr	r3, .L77+68
 1213 013e 1C70     		strb	r4, [r3]
 163:Core/Src/main.c ****      
 1214              		.loc 1 163 6 is_stmt 1 view .LVU335
 163:Core/Src/main.c ****      
 1215              		.loc 1 163 33 is_stmt 0 view .LVU336
 1216 0140 644B     		ldr	r3, .L77+52
 1217 0142 D3ED007A 		vldr.32	s15, [r3]
 1218 0146 78EE677A 		vsub.f32	s15, s16, s15
 163:Core/Src/main.c ****      
 1219              		.loc 1 163 22 view .LVU337
 1220 014a FCEEE77A 		vcvt.u32.f32	s15, s15
 1221 014e CDED017A 		vstr.32	s15, [sp, #4]	@ int
 1222 0152 9DF80400 		ldrb	r0, [sp, #4]	@ zero_extendqisi2
 1223 0156 644B     		ldr	r3, .L77+72
 1224 0158 1870     		strb	r0, [r3]
 165:Core/Src/main.c ****  
 1225              		.loc 1 165 6 is_stmt 1 view .LVU338
 165:Core/Src/main.c ****  
 1226              		.loc 1 165 41 is_stmt 0 view .LVU339
 1227 015a FFF7FEFF 		bl	__aeabi_i2d
 1228              	.LVL64:
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 53


 1229 015e 50A3     		adr	r3, .L77
 1230 0160 D3E90023 		ldrd	r2, [r3]
 1231 0164 FFF7FEFF 		bl	__aeabi_dmul
 1232              	.LVL65:
 1233 0168 0646     		mov	r6, r0
 1234 016a 0F46     		mov	r7, r1
 165:Core/Src/main.c ****  
 1235              		.loc 1 165 22 view .LVU340
 1236 016c 2846     		mov	r0, r5
 1237 016e FFF7FEFF 		bl	__aeabi_i2d
 1238              	.LVL66:
 1239 0172 3246     		mov	r2, r6
 1240 0174 3B46     		mov	r3, r7
 1241 0176 FFF7FEFF 		bl	__aeabi_ddiv
 1242              	.LVL67:
 1243 017a FFF7FEFF 		bl	__aeabi_d2f
 1244              	.LVL68:
 1245 017e 07EE900A 		vmov	s15, r0
 165:Core/Src/main.c ****  
 1246              		.loc 1 165 8 view .LVU341
 1247 0182 5A4B     		ldr	r3, .L77+76
 1248 0184 1860     		str	r0, [r3]	@ float
 167:Core/Src/main.c ****  
 1249              		.loc 1 167 6 is_stmt 1 view .LVU342
 167:Core/Src/main.c ****  
 1250              		.loc 1 167 45 is_stmt 0 view .LVU343
 1251 0186 5A4B     		ldr	r3, .L77+80
 1252 0188 D3ED006A 		vldr.32	s13, [r3]
 1253 018c 76EEC86A 		vsub.f32	s13, s13, s16
 167:Core/Src/main.c ****  
 1254              		.loc 1 167 26 view .LVU344
 1255 0190 67EEA67A 		vmul.f32	s15, s15, s13
 167:Core/Src/main.c ****  
 1256              		.loc 1 167 22 view .LVU345
 1257 0194 574B     		ldr	r3, .L77+84
 1258 0196 C3ED007A 		vstr.32	s15, [r3]
 167:Core/Src/main.c ****  
 1259              		.loc 1 167 56 is_stmt 1 view .LVU346
 169:Core/Src/main.c ****  
 1260              		.loc 1 169 6 view .LVU347
 169:Core/Src/main.c ****  
 1261              		.loc 1 169 70 is_stmt 0 view .LVU348
 1262 019a DFED577A 		vldr.32	s15, .L77+88
 1263 019e 86EEA77A 		vdiv.f32	s14, s13, s15
 169:Core/Src/main.c ****  
 1264              		.loc 1 169 75 view .LVU349
 1265 01a2 564B     		ldr	r3, .L77+92
 1266 01a4 D3ED007A 		vldr.32	s15, [r3]
 1267 01a8 27EE277A 		vmul.f32	s14, s14, s15
 169:Core/Src/main.c ****  
 1268              		.loc 1 169 86 view .LVU350
 1269 01ac 544B     		ldr	r3, .L77+96
 1270 01ae D3ED007A 		vldr.32	s15, [r3]
 1271 01b2 27EE277A 		vmul.f32	s14, s14, s15
 169:Core/Src/main.c ****  
 1272              		.loc 1 169 39 view .LVU351
 1273 01b6 07EE904A 		vmov	s15, r4	@ int
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 54


 1274 01ba F8EEE77A 		vcvt.f32.s32	s15, s15
 1275 01be 77EEC77A 		vsub.f32	s15, s15, s14
 169:Core/Src/main.c ****  
 1276              		.loc 1 169 24 view .LVU352
 1277 01c2 504B     		ldr	r3, .L77+100
 1278 01c4 C3ED007A 		vstr.32	s15, [r3]
 174:Core/Src/main.c ****   
 1279              		.loc 1 174 5 is_stmt 1 view .LVU353
 174:Core/Src/main.c ****   
 1280              		.loc 1 174 40 is_stmt 0 view .LVU354
 1281 01c8 4FF48061 		mov	r1, #1024
 1282 01cc 3748     		ldr	r0, .L77+12
 1283 01ce FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1284              	.LVL69:
 1285 01d2 0446     		mov	r4, r0
 1286              	.LVL70:
 176:Core/Src/main.c ****     {
 1287              		.loc 1 176 5 is_stmt 1 view .LVU355
 176:Core/Src/main.c ****     {
 1288              		.loc 1 176 26 is_stmt 0 view .LVU356
 1289 01d4 4C4B     		ldr	r3, .L77+104
 1290 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 176:Core/Src/main.c ****     {
 1291              		.loc 1 176 8 view .LVU357
 1292 01d8 012B     		cmp	r3, #1
 1293 01da 3FF443AF 		beq	.L74
 1294              	.LVL71:
 1295              	.L66:
 187:Core/Src/main.c ****     TempoSetado = Tempo[LedTimerAceso];
 1296              		.loc 1 187 5 is_stmt 1 view .LVU358
 187:Core/Src/main.c ****     TempoSetado = Tempo[LedTimerAceso];
 1297              		.loc 1 187 22 is_stmt 0 view .LVU359
 1298 01de 4A4B     		ldr	r3, .L77+104
 1299 01e0 1C70     		strb	r4, [r3]
 188:Core/Src/main.c ****  //------------------------------------------------------------------------------------------------
 1300              		.loc 1 188 5 is_stmt 1 view .LVU360
 188:Core/Src/main.c ****  //------------------------------------------------------------------------------------------------
 1301              		.loc 1 188 24 is_stmt 0 view .LVU361
 1302 01e2 314B     		ldr	r3, .L77+8
 1303 01e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1304 01e6 334A     		ldr	r2, .L77+20
 1305 01e8 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 188:Core/Src/main.c ****  //------------------------------------------------------------------------------------------------
 1306              		.loc 1 188 17 view .LVU362
 1307 01ea 334B     		ldr	r3, .L77+24
 1308 01ec 1A70     		strb	r2, [r3]
 192:Core/Src/main.c ****      if (EstadoBotaoOnOff == GPIO_PIN_SET && EstadoAnteriorBotaoOnOff == GPIO_PIN_RESET) {
 1309              		.loc 1 192 6 is_stmt 1 view .LVU363
 192:Core/Src/main.c ****      if (EstadoBotaoOnOff == GPIO_PIN_SET && EstadoAnteriorBotaoOnOff == GPIO_PIN_RESET) {
 1310              		.loc 1 192 41 is_stmt 0 view .LVU364
 1311 01ee 4FF40061 		mov	r1, #2048
 1312 01f2 2E48     		ldr	r0, .L77+12
 1313 01f4 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 1314              	.LVL72:
 1315 01f8 0446     		mov	r4, r0
 1316              	.LVL73:
 193:Core/Src/main.c ****          HAL_Delay(100);
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 55


 1317              		.loc 1 193 6 is_stmt 1 view .LVU365
 193:Core/Src/main.c ****          HAL_Delay(100);
 1318              		.loc 1 193 27 is_stmt 0 view .LVU366
 1319 01fa 444B     		ldr	r3, .L77+108
 1320 01fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 193:Core/Src/main.c ****          HAL_Delay(100);
 1321              		.loc 1 193 9 view .LVU367
 1322 01fe 012B     		cmp	r3, #1
 1323 0200 3FF458AF 		beq	.L75
 1324              	.LVL74:
 1325              	.L67:
 197:Core/Src/main.c ****  
 1326              		.loc 1 197 6 is_stmt 1 view .LVU368
 197:Core/Src/main.c ****  
 1327              		.loc 1 197 23 is_stmt 0 view .LVU369
 1328 0204 414B     		ldr	r3, .L77+108
 1329 0206 1C70     		strb	r4, [r3]
 199:Core/Src/main.c ****  
 1330              		.loc 1 199 6 is_stmt 1 view .LVU370
 1331 0208 2F4C     		ldr	r4, .L77+40
 1332 020a 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1333 020c 003A     		subs	r2, r2, #0
 1334 020e 18BF     		it	ne
 1335 0210 0122     		movne	r2, #1
 1336 0212 4FF40051 		mov	r1, #8192
 1337 0216 2948     		ldr	r0, .L77+28
 1338 0218 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1339              	.LVL75:
 201:Core/Src/main.c ****          UmidadeAnterior = Umidade;
 1340              		.loc 1 201 6 view .LVU371
 201:Core/Src/main.c ****          UmidadeAnterior = Umidade;
 1341              		.loc 1 201 24 is_stmt 0 view .LVU372
 1342 021c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 201:Core/Src/main.c ****          UmidadeAnterior = Umidade;
 1343              		.loc 1 201 9 view .LVU373
 1344 021e 002B     		cmp	r3, #0
 1345 0220 3FF455AF 		beq	.L76
 205:Core/Src/main.c ****      }
 1346              		.loc 1 205 8 is_stmt 1 view .LVU374
 1347 0224 0022     		movs	r2, #0
 1348 0226 2021     		movs	r1, #32
 1349 0228 2048     		ldr	r0, .L77+12
 1350 022a FFF7FEFF 		bl	HAL_GPIO_WritePin
 1351              	.LVL76:
 1352 022e 54E7     		b	.L69
 1353              	.LVL77:
 1354              	.L73:
 212:Core/Src/main.c ****        HAL_Delay(100);
 1355              		.loc 1 212 48 is_stmt 0 discriminator 1 view .LVU375
 1356 0230 0028     		cmp	r0, #0
 1357 0232 7FF45DAF 		bne	.L70
 212:Core/Src/main.c ****        HAL_Delay(100);
 1358              		.loc 1 212 107 discriminator 2 view .LVU376
 1359 0236 244B     		ldr	r3, .L77+40
 1360 0238 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 212:Core/Src/main.c ****        HAL_Delay(100);
 1361              		.loc 1 212 90 discriminator 2 view .LVU377
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 56


 1362 023a 012B     		cmp	r3, #1
 1363 023c 7FF458AF 		bne	.L70
 213:Core/Src/main.c ****        ModoAtual = (ModoAtual % 3) + 1;
 1364              		.loc 1 213 8 is_stmt 1 view .LVU378
 1365 0240 6420     		movs	r0, #100
 1366              	.LVL78:
 213:Core/Src/main.c ****        ModoAtual = (ModoAtual % 3) + 1;
 1367              		.loc 1 213 8 is_stmt 0 view .LVU379
 1368 0242 FFF7FEFF 		bl	HAL_Delay
 1369              	.LVL79:
 214:Core/Src/main.c ****  
 1370              		.loc 1 214 8 is_stmt 1 view .LVU380
 214:Core/Src/main.c ****  
 1371              		.loc 1 214 36 is_stmt 0 view .LVU381
 1372 0246 324D     		ldr	r5, .L77+112
 1373 0248 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1374 024a 324A     		ldr	r2, .L77+116
 1375 024c A2FB0312 		umull	r1, r2, r2, r3
 1376 0250 02F0FE01 		and	r1, r2, #254
 1377 0254 01EB5202 		add	r2, r1, r2, lsr #1
 1378 0258 9A1A     		subs	r2, r3, r2
 1379 025a 0132     		adds	r2, r2, #1
 1380 025c D2B2     		uxtb	r2, r2
 214:Core/Src/main.c ****  
 1381              		.loc 1 214 18 view .LVU382
 1382 025e 2A70     		strb	r2, [r5]
 216:Core/Src/main.c ****        HAL_GPIO_WritePin(Modo2_GPIO_Port, Modo2_Pin, (ModoAtual == 2) ? GPIO_PIN_SET : GPIO_PIN_RES
 1383              		.loc 1 216 8 is_stmt 1 view .LVU383
 1384 0260 124E     		ldr	r6, .L77+12
 1385 0262 012A     		cmp	r2, #1
 1386 0264 14BF     		ite	ne
 1387 0266 0022     		movne	r2, #0
 1388 0268 0122     		moveq	r2, #1
 1389 026a 4021     		movs	r1, #64
 1390 026c 3046     		mov	r0, r6
 1391 026e FFF7FEFF 		bl	HAL_GPIO_WritePin
 1392              	.LVL80:
 217:Core/Src/main.c ****        HAL_GPIO_WritePin(Modo3_GPIO_Port, Modo3_Pin, (ModoAtual == 3) ? GPIO_PIN_SET : GPIO_PIN_RES
 1393              		.loc 1 217 8 view .LVU384
 1394 0272 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1395 0274 022A     		cmp	r2, #2
 1396 0276 14BF     		ite	ne
 1397 0278 0022     		movne	r2, #0
 1398 027a 0122     		moveq	r2, #1
 1399 027c 8021     		movs	r1, #128
 1400 027e 3046     		mov	r0, r6
 1401 0280 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1402              	.LVL81:
 218:Core/Src/main.c ****  }
 1403              		.loc 1 218 8 view .LVU385
 1404 0284 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 1405 0286 032A     		cmp	r2, #3
 1406 0288 14BF     		ite	ne
 1407 028a 0022     		movne	r2, #0
 1408 028c 0122     		moveq	r2, #1
 1409 028e 4FF48071 		mov	r1, #256
 1410 0292 3046     		mov	r0, r6
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 57


 1411 0294 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1412              	.LVL82:
 1413 0298 2AE7     		b	.L70
 1414              	.L78:
 1415 029a 00BFAFF3 		.align	3
 1415      0080
 1416              	.L77:
 1417 02a0 7B14AE47 		.word	1202590843
 1418 02a4 E17A843F 		.word	1065646817
 1419 02a8 00000000 		.word	.LANCHOR10
 1420 02ac 00000240 		.word	1073872896
 1421 02b0 00000000 		.word	.LANCHOR9
 1422 02b4 00000000 		.word	.LANCHOR11
 1423 02b8 00000000 		.word	.LANCHOR3
 1424 02bc 00080240 		.word	1073874944
 1425 02c0 00000000 		.word	.LANCHOR8
 1426 02c4 00000000 		.word	.LANCHOR0
 1427 02c8 00000000 		.word	.LANCHOR4
 1428 02cc 67666666 		.word	1717986919
 1429 02d0 00000000 		.word	.LANCHOR7
 1430 02d4 00000000 		.word	.LANCHOR14
 1431 02d8 00000000 		.word	.LANCHOR24
 1432 02dc 01011000 		.word	1048833
 1433 02e0 00000000 		.word	.LANCHOR12
 1434 02e4 00000000 		.word	.LANCHOR13
 1435 02e8 00000000 		.word	.LANCHOR15
 1436 02ec 00000000 		.word	.LANCHOR16
 1437 02f0 00000000 		.word	.LANCHOR17
 1438 02f4 00000000 		.word	.LANCHOR18
 1439 02f8 0000C842 		.word	1120403456
 1440 02fc 00000000 		.word	.LANCHOR19
 1441 0300 00000000 		.word	.LANCHOR20
 1442 0304 00000000 		.word	.LANCHOR21
 1443 0308 00000000 		.word	.LANCHOR22
 1444 030c 00000000 		.word	.LANCHOR23
 1445 0310 00000000 		.word	.LANCHOR1
 1446 0314 ABAAAAAA 		.word	-1431655765
 1447              	.LBE16:
 1448              		.cfi_endproc
 1449              	.LFE221:
 1451              		.global	AguaDesnecessaria
 1452              		.global	Capacidade
 1453              		.global	TempoNecessario
 1454              		.global	k
 1455              		.global	UmidadeDesejada
 1456              		.global	AreaIrrigada
 1457              		.global	Vazao
 1458              		.global	EstadoAnteriorBotaoModo
 1459              		.global	ModoAtual
 1460              		.global	VariacaoUmidade
 1461              		.global	VolumeDeAgua
 1462              		.global	UmidadeAnterior
 1463              		.global	Umidade
 1464              		.global	EstadoBotaoOnOff
 1465              		.global	EstadoSistema
 1466              		.global	TempoSetado
 1467              		.global	Tempo
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 58


 1468              		.global	EstadoBotaoTimer
 1469              		.global	LedTimerAceso
 1470              		.global	LedsTimer
 1471              		.global	htim2
 1472              		.global	hadc1
 1473              		.section	.bss.AguaDesnecessaria,"aw",%nobits
 1474              		.align	2
 1475              		.set	.LANCHOR21,. + 0
 1478              	AguaDesnecessaria:
 1479 0000 00000000 		.space	4
 1480              		.section	.bss.LedOnOffStateModo2.0,"aw",%nobits
 1481              		.set	.LANCHOR6,. + 0
 1484              	LedOnOffStateModo2.0:
 1485 0000 00       		.space	1
 1486              		.section	.bss.LedTimerAceso,"aw",%nobits
 1487              		.set	.LANCHOR10,. + 0
 1490              	LedTimerAceso:
 1491 0000 00       		.space	1
 1492              		.section	.bss.Modo1Executado.2,"aw",%nobits
 1493              		.set	.LANCHOR2,. + 0
 1496              	Modo1Executado.2:
 1497 0000 00       		.space	1
 1498              		.section	.bss.TempoAnteriorModo2.1,"aw",%nobits
 1499              		.align	2
 1500              		.set	.LANCHOR5,. + 0
 1503              	TempoAnteriorModo2.1:
 1504 0000 00000000 		.space	4
 1505              		.section	.bss.TempoNecessario,"aw",%nobits
 1506              		.align	2
 1507              		.set	.LANCHOR18,. + 0
 1510              	TempoNecessario:
 1511 0000 00000000 		.space	4
 1512              		.section	.bss.TempoSetado,"aw",%nobits
 1513              		.set	.LANCHOR3,. + 0
 1516              	TempoSetado:
 1517 0000 00       		.space	1
 1518              		.section	.bss.Umidade,"aw",%nobits
 1519              		.align	2
 1520              		.set	.LANCHOR7,. + 0
 1523              	Umidade:
 1524 0000 00000000 		.space	4
 1525              		.section	.bss.UmidadeAnterior,"aw",%nobits
 1526              		.align	2
 1527              		.set	.LANCHOR14,. + 0
 1530              	UmidadeAnterior:
 1531 0000 00000000 		.space	4
 1532              		.section	.bss.VariacaoUmidade,"aw",%nobits
 1533              		.set	.LANCHOR15,. + 0
 1536              	VariacaoUmidade:
 1537 0000 00       		.space	1
 1538              		.section	.bss.VolumeDeAgua,"aw",%nobits
 1539              		.set	.LANCHOR13,. + 0
 1542              	VolumeDeAgua:
 1543 0000 00       		.space	1
 1544              		.section	.bss.hadc1,"aw",%nobits
 1545              		.align	2
 1546              		.set	.LANCHOR0,. + 0
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 59


 1549              	hadc1:
 1550 0000 00000000 		.space	72
 1550      00000000 
 1550      00000000 
 1550      00000000 
 1550      00000000 
 1551              		.section	.bss.htim2,"aw",%nobits
 1552              		.align	2
 1553              		.set	.LANCHOR8,. + 0
 1556              	htim2:
 1557 0000 00000000 		.space	72
 1557      00000000 
 1557      00000000 
 1557      00000000 
 1557      00000000 
 1558              		.section	.bss.k,"aw",%nobits
 1559              		.align	2
 1560              		.set	.LANCHOR16,. + 0
 1563              	k:
 1564 0000 00000000 		.space	4
 1565              		.section	.data.AreaIrrigada,"aw"
 1566              		.align	2
 1567              		.set	.LANCHOR20,. + 0
 1570              	AreaIrrigada:
 1571 0000 00002041 		.word	1092616192
 1572              		.section	.data.Capacidade,"aw"
 1573              		.align	2
 1574              		.set	.LANCHOR19,. + 0
 1577              	Capacidade:
 1578 0000 00004843 		.word	1128792064
 1579              		.section	.data.EstadoAnteriorBotaoModo,"aw"
 1580              		.set	.LANCHOR24,. + 0
 1583              	EstadoAnteriorBotaoModo:
 1584 0000 01       		.byte	1
 1585              		.section	.data.EstadoBotaoOnOff,"aw"
 1586              		.set	.LANCHOR23,. + 0
 1589              	EstadoBotaoOnOff:
 1590 0000 01       		.byte	1
 1591              		.section	.data.EstadoBotaoTimer,"aw"
 1592              		.set	.LANCHOR22,. + 0
 1595              	EstadoBotaoTimer:
 1596 0000 01       		.byte	1
 1597              		.section	.data.EstadoSistema,"aw"
 1598              		.set	.LANCHOR4,. + 0
 1601              	EstadoSistema:
 1602 0000 01       		.byte	1
 1603              		.section	.data.LedsTimer,"aw"
 1604              		.align	2
 1605              		.set	.LANCHOR9,. + 0
 1608              	LedsTimer:
 1609 0000 01020408 		.ascii	"\001\002\004\010\020"
 1609      10
 1610              		.section	.data.ModoAtual,"aw"
 1611              		.set	.LANCHOR1,. + 0
 1614              	ModoAtual:
 1615 0000 01       		.byte	1
 1616              		.section	.data.Tempo,"aw"
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 60


 1617              		.align	2
 1618              		.set	.LANCHOR11,. + 0
 1621              	Tempo:
 1622 0000 0A141E28 		.ascii	"\012\024\036(2"
 1622      32
 1623              		.section	.data.UmidadeDesejada,"aw"
 1624              		.align	2
 1625              		.set	.LANCHOR17,. + 0
 1628              	UmidadeDesejada:
 1629 0000 00004842 		.word	1112014848
 1630              		.section	.data.Vazao,"aw"
 1631              		.align	2
 1632              		.set	.LANCHOR12,. + 0
 1635              	Vazao:
 1636 0000 00002040 		.word	1075838976
 1637              		.text
 1638              	.Letext0:
 1639              		.file 3 "c:\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-
 1640              		.file 4 "c:\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-
 1641              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1642              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1643              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1644              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1645              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1646              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1647              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1648              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1649              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1650              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1651              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1652              		.file 16 "<built-in>"
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 61


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:217    .text.MX_GPIO_Init:000000e8 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:225    .text.Read_ADC_Value:00000000 $t
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:231    .text.Read_ADC_Value:00000000 Read_ADC_Value
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:262    .text.Read_ADC_Value:0000001c $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:267    .text.ExecutarModo:00000000 $t
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:273    .text.ExecutarModo:00000000 ExecutarModo
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:452    .text.ExecutarModo:000000d8 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:466    .text.TIM2_IRQHandler:00000000 $t
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:472    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:535    .text.TIM2_IRQHandler:00000058 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:544    .text.Error_Handler:00000000 $t
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:550    .text.Error_Handler:00000000 Error_Handler
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:582    .text.MX_ADC1_Init:00000000 $t
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:587    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:694    .text.MX_ADC1_Init:00000060 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:701    .text.MX_TIM2_Init:00000000 $t
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:706    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:809    .text.MX_TIM2_Init:00000060 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:815    .text.SystemClock_Config:00000000 $t
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:821    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:968    .text.SystemClock_Config:0000009c $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:978    .text.main:00000000 $t
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:984    .text.main:00000000 main
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1417   .text.main:000002a0 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1478   .bss.AguaDesnecessaria:00000000 AguaDesnecessaria
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1577   .data.Capacidade:00000000 Capacidade
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1510   .bss.TempoNecessario:00000000 TempoNecessario
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1563   .bss.k:00000000 k
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1628   .data.UmidadeDesejada:00000000 UmidadeDesejada
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1570   .data.AreaIrrigada:00000000 AreaIrrigada
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1635   .data.Vazao:00000000 Vazao
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1583   .data.EstadoAnteriorBotaoModo:00000000 EstadoAnteriorBotaoModo
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1614   .data.ModoAtual:00000000 ModoAtual
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1536   .bss.VariacaoUmidade:00000000 VariacaoUmidade
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1542   .bss.VolumeDeAgua:00000000 VolumeDeAgua
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1530   .bss.UmidadeAnterior:00000000 UmidadeAnterior
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1523   .bss.Umidade:00000000 Umidade
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1589   .data.EstadoBotaoOnOff:00000000 EstadoBotaoOnOff
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1601   .data.EstadoSistema:00000000 EstadoSistema
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1516   .bss.TempoSetado:00000000 TempoSetado
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1621   .data.Tempo:00000000 Tempo
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1595   .data.EstadoBotaoTimer:00000000 EstadoBotaoTimer
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1490   .bss.LedTimerAceso:00000000 LedTimerAceso
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1608   .data.LedsTimer:00000000 LedsTimer
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1556   .bss.htim2:00000000 htim2
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1549   .bss.hadc1:00000000 hadc1
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1474   .bss.AguaDesnecessaria:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1484   .bss.LedOnOffStateModo2.0:00000000 LedOnOffStateModo2.0
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1485   .bss.LedOnOffStateModo2.0:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1491   .bss.LedTimerAceso:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1496   .bss.Modo1Executado.2:00000000 Modo1Executado.2
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1497   .bss.Modo1Executado.2:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1499   .bss.TempoAnteriorModo2.1:00000000 $d
ARM GAS  C:\Users\danpe\AppData\Local\Temp\ccilJupB.s 			page 62


C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1503   .bss.TempoAnteriorModo2.1:00000000 TempoAnteriorModo2.1
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1506   .bss.TempoNecessario:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1517   .bss.TempoSetado:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1519   .bss.Umidade:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1526   .bss.UmidadeAnterior:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1537   .bss.VariacaoUmidade:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1543   .bss.VolumeDeAgua:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1545   .bss.hadc1:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1552   .bss.htim2:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1559   .bss.k:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1566   .data.AreaIrrigada:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1573   .data.Capacidade:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1604   .data.LedsTimer:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1617   .data.Tempo:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1624   .data.UmidadeDesejada:00000000 $d
C:\Users\danpe\AppData\Local\Temp\ccilJupB.s:1631   .data.Vazao:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_ADC_GetValue
HAL_Delay
HAL_GetTick
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIMEx_MasterConfigSynchronization
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_i2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2f
HAL_Init
HAL_TIM_Base_Start_IT
HAL_GPIO_ReadPin
